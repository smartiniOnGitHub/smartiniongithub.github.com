// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DateImplementation = {"":
 ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 hashCode$0: function() {
  return this.millisecondsSinceEpoch;
},
 toUtc$0: function() {
  if (this.isUtc === true)
    return this;
  return $.Date_Date$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch, true);
},
 toString$0: function() {
  var t1 = new $.DateImplementation_toString_fourDigits();
  var t2 = new $.DateImplementation_toString_threeDigits();
  var t3 = new $.DateImplementation_toString_twoDigits();
  var y = t1.call$1(this.get$year());
  var m = t3.call$1(this.get$month());
  var d = t3.call$1(this.get$day());
  var h = t3.call$1(this.get$hour());
  var min = t3.call$1(this.get$minute());
  var sec = t3.call$1(this.get$second());
  var ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.Date_Date$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 get$weekday: function() {
  return $.Primitives_getWeekday(this);
},
 DateImplementation$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 DateImplementation$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ExceptionImplementation = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
}
};

$$.HashMapImplementation = {"":
 ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC);
  var t1 = $.hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  var hash = (t1 & this._keys.length - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash = $.and(t1, this._keys.length - 1);
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC);
  var hash = $.and($.hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  var capacity = this._keys.length;
  var numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  var t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  var oldKeys = this._keys;
  var oldValues = this._values;
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC1)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    var t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var t1 = this._keys;
  var length$ = t1.length;
  for (var t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  var t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC1)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  var t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC1;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 isEmpty$0: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = this._keys.length;
  for (var i = 0; i < length$; ++i) {
    var t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    var key = t1[i];
    if (!(key == null) && !(key === $.CTC1)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $.HashMapImplementation_getKeys__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: true
};

$$.HashSetImplementation = {"":
 ["_backingMap"],
 "super": "Object",
 clear$0: function() {
  this._backingMap.clear$0();
},
 add$1: function(value) {
  this._backingMap.operator$indexSet$2(value, value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 forEach$1: function(f) {
  this._backingMap.forEach$1(new $.HashSetImplementation_forEach__(f));
},
 some$1: function(f) {
  return $.some(this._backingMap.getKeys$0(), f);
},
 isEmpty$0: function() {
  return this._backingMap.isEmpty$0();
},
 get$length: function() {
  return $.get$length(this._backingMap);
},
 iterator$0: function() {
  return $.HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 HashSetImplementation$0: function() {
  this._backingMap = $.HashMapImplementation$();
},
 is$Collection: true
};

$$.HashSetIterator = {"":
 ["_entries", "_nextValidIndex"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this._nextValidIndex;
  var t2 = this._entries;
  var t3 = t2.length;
  if (t1 >= t3)
    return false;
  if (t1 < 0)
    throw $.ioore(t1);
  if (t2[t1] === $.CTC1)
    this._advance$0();
  return this._nextValidIndex < t3;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var t1 = this._entries;
  var t2 = this._nextValidIndex;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  var res = t1[t2];
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1 = this._entries;
  var length$ = t1.length;
  var entry = null;
  do {
    var t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= length$)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC1);
},
 HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._DeletedKeySentinel = {"":
 [],
 "super": "Object"
};

$$.DoubleLinkedQueueEntry = {"":
 ["_previous!", "_next=", "_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":
 ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.CTC3);
},
 get$element: function() {
  throw $.$$throw($.CTC3);
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":
 ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this.addLast$1(value);
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 first$0: function() {
  return this._sentinel._next.get$element();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 isEmpty$0: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
    entry = nextEntry;
  }
},
 some$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      return true;
    entry = nextEntry;
  }
  return false;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: true
};

$$._DoubleLinkedQueueIterator = {"":
 ["_sentinel", "_currentEntry"],
 "super": "Object",
 hasNext$0: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.JSSyntaxRegExp = {"":
 ["_lib_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 get$pattern: function() {
  return this._lib_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
}
};

$$.StringBufferImpl = {"":
 ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 isEmpty$0: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addCharCode$1: function(charCode) {
  return this.add$1($.StringImplementation_String$fromCharCodes([charCode]));
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.StringImplementation_concatAll(this._buffer);
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ArgumentError = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.NoSuchMethodError = {"":
 ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = this._arguments, i = 0; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, $.NoSuchMethodError_safeToString(t1[i]));
  }
  t1 = this._existingArgumentNames;
  if (t1 == null)
    return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(sb) + ']';
  else {
    var actualParameters = $.toString(sb);
    sb = $.StringBuffer_StringBuffer('');
    for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
      if (i > 0)
        $.add$1(sb, ', ');
      $.add$1(sb, $.index(t1, i));
    }
    var formalParameters = $.toString(sb);
    t1 = this._functionName;
    return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
  }
}
};

$$.IndexOutOfRangeException = {"":
 ["_value"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
}
};

$$.ObjectNotClosureException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Object is not closure';
}
};

$$.StackOverflowException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$.FormatException = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$FormatException: true
};

$$.NullPointerException = {"":
 ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
}
};

$$.NoMoreElementsException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'NoMoreElementsException';
}
};

$$.EmptyQueueException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'EmptyQueueException';
}
};

$$.UnsupportedOperationException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  return 'UnsupportedOperationException: ' + this._message;
}
};

$$.IllegalJSRegExpException = {"":
 ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
}
};

$$.RuntimeError = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
}
};

$$.Object = {"":
 [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 hashCode$0: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.ListIterator = {"":
 ["i", "list"],
 "super": "Object",
 hasNext$0: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.NoMoreElementsException$());
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.MetaInfo = {"":
 ["_tag?", "_tags", "_lib2_set?"],
 "super": "Object",
 _lib2_set$2: function(arg0, arg1) { return this._lib2_set.call$2(arg0, arg1); }
};

$$._BufferList = {"":
 ["_lib0_length", "_buffers", "_index"],
 "super": "Object",
 add$2: function(buffer, offset) {
  $.addLast(this._buffers, buffer);
  this._lib0_length = $.add(this._lib0_length, $.get$length(buffer));
  if (!$.eqB(offset, 0))
    this._index = offset;
},
 add$1: function(buffer) {
  return this.add$2(buffer,0)
},
 get$first: function() {
  return this._buffers.first$0();
},
 first$0: function() { return this.get$first().call$0(); },
 next$0: function() {
  var t1 = this._buffers.first$0();
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior))
    return this.next$0$bailout(1, t1, 0);
  var t3 = this._index;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._index = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  var value = t1[t3];
  t3 = this._lib0_length;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(3, value, t3);
  this._lib0_length = t3 - 1;
  if ($.eqB(this._index, $.get$length(this._buffers.first$0()))) {
    this._buffers.removeFirst$0();
    this._index = 0;
  }
  return value;
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env0;
      t1 = env1;
      break;
    case 3:
      value = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this._buffers.first$0();
    case 1:
      state0 = 0;
      var t3 = this._index;
    case 2:
      state0 = 0;
      this._index = $.add(t3, 1);
      var value = $.index(t1, t3);
      t3 = this._lib0_length;
    case 3:
      state0 = 0;
      this._lib0_length = $.sub(t3, 1);
      if ($.eqB(this._index, $.get$length(this._buffers.first$0()))) {
        this._buffers.removeFirst$0();
        this._index = 0;
      }
      return value;
  }
},
 get$length: function() {
  return this._lib0_length;
},
 isEmpty$0: function() {
  return $.isEmpty(this._buffers);
},
 clear$0: function() {
  this._index = 0;
  this._lib0_length = 0;
  this._buffers = $.Queue_Queue();
},
 _BufferList$0: function() {
  this.clear$0();
}
};

$$.HttpException = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'HttpException: ' + this.message;
}
};

$$._HttpHeaders = {"":
 ["_mutable", "_headers?", "_noFoldingHeaders", "_host", "_port"],
 "super": "Object",
 operator$index$1: function(name$) {
  name$ = $.toLowerCase(name$);
  return this._headers.operator$index$1(name$);
},
 add$2: function(name$, value) {
  this._checkMutable$0();
  if (typeof value === 'object' && value !== null && (value.constructor === Array || !!value.is$List)) {
    if (typeof value !== 'object' || value === null || value.constructor !== Array && !value.is$JavaScriptIndexingBehavior)
      return this.add$2$bailout(1, name$, value);
    for (var i = 0; i < value.length; ++i)
      this._add$2(name$, value[i]);
  } else
    this._add$2(name$, value);
},
 add$2$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var name$ = env0;
      var value = env1;
      break;
  }
  switch (state0) {
    case 0:
      this._checkMutable$0();
    case 1:
      if (state0 === 1 || state0 === 0 && typeof value === 'object' && value !== null && (value.constructor === Array || !!value.is$List))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            for (var i = 0; $.ltB(i, $.get$length(value)); ++i)
              this._add$2(name$, $.index(value, i));
        }
      else
        this._add$2(name$, value);
  }
},
 set$2: function(name$, value) {
  name$ = $.toLowerCase(name$);
  this._checkMutable$0();
  this.removeAll$1(name$);
  this.add$2(name$, value);
},
 remove$2: function(name$, value) {
  this._checkMutable$0();
  name$ = $.toLowerCase(name$);
  var values = this._headers.operator$index$1(name$);
  if (!(values == null)) {
    var index = $.indexOf$1(values, value);
    if (!$.eqB(index, -1))
      $.removeRange(values, index, 1);
  }
},
 removeAll$1: function(name$) {
  this._checkMutable$0();
  name$ = $.toLowerCase(name$);
  this._headers.remove$1(name$);
},
 forEach$1: function(f) {
  this._headers.forEach$1(f);
},
 set$ifModifiedSince: function(ifModifiedSince) {
  this._checkMutable$0();
  this._set$2('if-modified-since', $._HttpUtils_formatDate(ifModifiedSince.toUtc$0()));
},
 set$date: function(date) {
  this._checkMutable$0();
  this._set$2('date', $._HttpUtils_formatDate(date.toUtc$0()));
},
 set$expires: function(expires) {
  this._checkMutable$0();
  this._set$2('expires', $._HttpUtils_formatDate(expires.toUtc$0()));
},
 _add$2: function(name$, value) {
  if ($.eqB($.toLowerCase(name$), 'date')) {
    var t1 = value;
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$Date)
      this.set$date(value);
    else {
      t1 = value;
      if (typeof t1 === 'string')
        this._set$2('date', value);
      else
        throw $.$$throw($.HttpException$('Unexpected type for header named ' + $.S(name$)));
    }
  } else if ($.eqB($.toLowerCase(name$), 'expires')) {
    t1 = value;
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$Date)
      this.set$expires(value);
    else {
      t1 = value;
      if (typeof t1 === 'string')
        this._set$2('expires', value);
      else
        throw $.$$throw($.HttpException$('Unexpected type for header named ' + $.S(name$)));
    }
  } else if ($.eqB($.toLowerCase(name$), 'if-modified-since')) {
    t1 = value;
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$Date)
      this.set$ifModifiedSince(value);
    else {
      t1 = value;
      if (typeof t1 === 'string')
        this._set$2('if-modified-since', value);
      else
        throw $.$$throw($.HttpException$('Unexpected type for header named ' + $.S(name$)));
    }
  } else if ($.eqB($.toLowerCase(name$), 'host')) {
    var pos = $.indexOf$1(value, ':');
    if ($.eqB(pos, -1)) {
      this._host = value;
      this._port = 80;
    } else {
      if ($.gtB(pos, 0))
        this._host = $.substring$2(value, 0, pos);
      else
        this._host = null;
      if ($.eqB($.add(pos, 1), $.get$length(value)))
        this._port = 80;
      else
        try {
          this._port = $.parseInt($.substring$1(value, $.add(pos, 1)));
        } catch (exception) {
          t1 = $.unwrapException(exception);
          if (typeof t1 === 'object' && t1 !== null && !!t1.is$FormatException)
            this._port = null;
          else
            throw exception;
        }

      this._set$2('host', value);
    }
  } else if ($.eqB($.toLowerCase(name$), 'content-type'))
    this._set$2('content-type', value);
  else {
    name$ = $.toLowerCase(name$);
    t1 = this._headers;
    var values = t1.operator$index$1(name$);
    if (values == null) {
      values = $.ListImplementation_List(null);
      t1.operator$indexSet$2(name$, values);
    }
    t1 = value;
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$Date)
      $.add$1(values, $._HttpUtils_formatDate(value));
    else
      $.add$1(values, $.toString(value));
  }
},
 _set$2: function(name$, value) {
  name$ = $.toLowerCase(name$);
  var values = $.ListImplementation_List(null);
  this._headers.operator$indexSet$2(name$, values);
  values.push(value);
},
 get$_set: function() { return new $.BoundClosure(this, '_set$2'); },
 _checkMutable$0: function() {
  if (!this._mutable)
    throw $.$$throw($.HttpException$('HTTP headers are not mutable'));
},
 _foldHeader$1: function(name$) {
  if (!$.eqB(name$, 'set-cookie')) {
    var t1 = this._noFoldingHeaders;
    t1 = !(t1 == null) && !$.eqB($.indexOf$1(t1, name$), -1);
  } else
    t1 = true;
  if (t1)
    return false;
  return true;
},
 _write$1: function(connection) {
  this._headers.forEach$1(new $._HttpHeaders__write_anon($.CTC8, $.CTC9, $.CTC7, connection, this));
},
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  this._headers.forEach$1(new $._HttpHeaders_toString_anon(this, sb));
  return $.toString(sb);
}
};

$$._HttpRequestResponseBase = {"":
 ["_headResponse!", "_headers?", "_protocolVersion!"],
 "super": "Object",
 get$headers: function() {
  return this._headers;
},
 get$persistentConnection: function() {
  var connection = $.index(this.get$headers(), 'Connection');
  if ($.eqB(this._protocolVersion, '1.1')) {
    if (connection == null)
      return true;
    return $.some($.index(this.get$headers(), 'Connection'), new $._HttpRequestResponseBase_persistentConnection_anon()) !== true;
  } else {
    if (connection == null)
      return false;
    return $.some($.index(this.get$headers(), 'Connection'), new $._HttpRequestResponseBase_persistentConnection_anon0());
  }
},
 set$persistentConnection: function(persistentConnection) {
  if (!(this.get$_outputStream() == null))
    throw $.$$throw($.HttpException$('Header already sent'));
  this.get$headers().remove$2('Connection', 'close');
  this.get$headers().remove$2('Connection', 'keep-alive');
  if ($.eqB(this._protocolVersion, '1.1') && persistentConnection !== true)
    this.get$headers().add$2('Connection', 'close');
  else if ($.eqB(this._protocolVersion, '1.0') && persistentConnection === true)
    this.get$headers().add$2('Connection', 'keep-alive');
},
 _write$2: function(data, copyBuffer) {
  if (this._headResponse === true)
    return;
  this._ensureHeadersSent$0();
  if ($.gtB($.get$length(data), 0)) {
    var t1 = $.ltB(this._contentLength, 0);
    var t2 = this._httpConnection;
    if (t1) {
      this._writeHexString$1($.get$length(data));
      this._writeCRLF$0();
      t2._write$2(data, copyBuffer);
      var allWritten = this._writeCRLF$0();
    } else {
      this._updateContentLength$1($.get$length(data));
      allWritten = t2._write$2(data, copyBuffer);
    }
  } else
    allWritten = true;
  return allWritten;
},
 _writeList$3: function(data, offset, count) {
  if (this._headResponse === true)
    return;
  this._ensureHeadersSent$0();
  if ($.gtB(count, 0)) {
    var t1 = $.ltB(this._contentLength, 0);
    var t2 = this._httpConnection;
    if (t1) {
      this._writeHexString$1(count);
      this._writeCRLF$0();
      t2._writeFrom$3(data, offset, count);
      var allWritten = this._writeCRLF$0();
    } else {
      this._updateContentLength$1(count);
      allWritten = t2._writeFrom$3(data, offset, count);
    }
  } else
    allWritten = true;
  return allWritten;
},
 _writeDone$0: function() {
  if ($.ltB(this._contentLength, 0))
    var allWritten = this._httpConnection._write$1($.CTC16);
  else {
    if (this._headResponse !== true && $.ltB(this._bodyBytesWritten, this._contentLength))
      throw $.$$throw($.HttpException$('Sending less than specified content length'));
    allWritten = true;
  }
  if (this.get$persistentConnection() !== true || this._httpConnection._closing)
    this._httpConnection._close$0();
  return allWritten;
},
 _writeHeaders$0: function() {
  var t1 = this._headers;
  t1._mutable = false;
  t1._write$1(this._httpConnection);
  return this._writeCRLF$0();
},
 _writeHexString$1: function(x) {
  if (x !== (x | 0))
    return this._writeHexString$1$bailout(1, x, 0, 0);
  var hexDigits = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];
  var hex = $.throwRuntimeError('cannot resolve Uint8List');
  if (typeof hex !== 'object' || hex === null || (hex.constructor !== Array || !!hex.immutable$list) && !hex.is$JavaScriptIndexingBehavior)
    return this._writeHexString$1$bailout(2, x, hexDigits, hex);
  var index = hex.length;
  for (; x > 0;) {
    --index;
    var t1 = $.mod(x, 16);
    if (t1 < 0 || t1 >= hexDigits.length)
      throw $.ioore(t1);
    t1 = hexDigits[t1];
    if (index < 0 || index >= hex.length)
      throw $.ioore(index);
    hex[index] = t1;
    x = $.shr(x, 4);
  }
  return this._httpConnection._writeFrom$3(hex, index, hex.length - index);
},
 _writeHexString$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var x = env0;
      break;
    case 2:
      x = env0;
      hexDigits = env1;
      hex = env2;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var hexDigits = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70];
      var hex = $.throwRuntimeError('cannot resolve Uint8List');
    case 2:
      state0 = 0;
      var index = $.get$length(hex);
      for (; $.gtB(x, 0);) {
        index = $.sub(index, 1);
        var t1 = $.mod(x, 16);
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= hexDigits.length)
          throw $.ioore(t1);
        $.indexSet(hex, index, hexDigits[t1]);
        x = $.shr(x, 4);
      }
      return this._httpConnection._writeFrom$3(hex, index, $.sub($.get$length(hex), index));
  }
},
 _writeCRLF$0: function() {
  return this._httpConnection._write$1($.CTC7);
},
 _writeSP$0: function() {
  return this._httpConnection._write$1($.CTC12);
},
 _ensureHeadersSent$0: function() {
  if (this._state === this.START)
    this._writeHeader$0();
},
 _updateContentLength$1: function(bytes) {
  var t1 = this._bodyBytesWritten;
  if (typeof bytes !== 'number')
    throw $.iae(bytes);
  if ($.gtB(t1 + bytes, this._contentLength))
    throw $.$$throw($.HttpException$('Writing more than specified content length'));
  this._bodyBytesWritten = this._bodyBytesWritten + bytes;
},
 get$_done: function() {
  return this._state === this.DONE;
},
 _HttpRequestResponseBase$1: function(_httpConnection) {
  this._state = this.START;
  this._headResponse = false;
}
};

$$._HttpRequest = {"":
 ["_method", "_uri", "_path", "_queryString", "_queryParameters", "_inputStream", "_lib0_buffer", "_dataEndCalled", "_streamErrorHandler?", "START", "HEADER_SENT", "DONE", "UPGRADED", "_state", "_headResponse", "_httpConnection", "_headers", "_cookies", "_protocolVersion", "_contentLength", "_bodyBytesWritten"],
 "super": "_HttpRequestResponseBase",
 get$method: function() {
  return this._method;
},
 get$uri: function() {
  return this._uri;
},
 _onRequestStart$3: function(method, uri, version) {
  this._method = method;
  this._uri = uri;
  this._parseRequestUri$1(uri);
},
 _onHeaderReceived$2: function(name$, value) {
  this._headers.add$2(name$, value);
},
 _onHeadersComplete$0: function() {
  this._headers._mutable = false;
  this._lib0_buffer = $._BufferList$();
},
 _onDataReceived$1: function(data) {
  $.add$1(this._lib0_buffer, data);
  var t1 = this._inputStream;
  if (!(t1 == null))
    t1._dataReceived$0();
},
 _onDataEnd$0: function() {
  var t1 = this._inputStream;
  if (!(t1 == null))
    t1._closeReceived$0();
  this._dataEndCalled = true;
},
 _parseRequestUri$1: function(uri) {
  var position = $.indexOf$2(uri, '?', 0);
  var t1 = $.eqB(position, -1);
  var t2 = this._uri;
  if (t1) {
    this._path = $._HttpUtils_decodeUrlEncodedString(t2);
    this._queryString = null;
    this._queryParameters = $.HashMapImplementation$();
  } else {
    this._path = $._HttpUtils_decodeUrlEncodedString($.substring$2(t2, 0, position));
    this._queryString = $.substring$1(this._uri, $.add(position, 1));
    this._queryParameters = $._HttpUtils_splitQueryString(this._queryString);
  }
},
 _streamSetErrorHandler$1: function(callback) {
  this._streamErrorHandler = callback;
},
 _streamErrorHandler$1: function(arg0) { return this._streamErrorHandler.call$1(arg0); }
};

$$._HttpResponse = {"":
 ["_statusCode", "_reasonPhrase", "_outputStream?", "_streamErrorHandler?", "START", "HEADER_SENT", "DONE", "UPGRADED", "_state", "_headResponse", "_httpConnection", "_headers", "_cookies", "_protocolVersion", "_contentLength", "_bodyBytesWritten"],
 "super": "_HttpRequestResponseBase",
 set$contentLength: function(contentLength) {
  if (this._state >= this.HEADER_SENT)
    throw $.$$throw($.HttpException$('Header already sent'));
  this._contentLength = contentLength;
},
 set$statusCode: function(statusCode) {
  if (!(this._outputStream == null))
    throw $.$$throw($.HttpException$('Header already sent'));
  this._statusCode = statusCode;
},
 get$reasonPhrase: function() {
  return this._findReasonPhrase$1(this._statusCode);
},
 get$outputStream: function() {
  if (this._state >= this.DONE)
    throw $.$$throw($.HttpException$('Response closed'));
  if (this._outputStream == null)
    this._outputStream = $._HttpOutputStream$(this);
  return this._outputStream;
},
 _responseEnd$0: function() {
  this._ensureHeadersSent$0();
  this._state = this.DONE;
  var t1 = this._httpConnection;
  t1.set$_onNoPendingWrites(null);
  this._writeDone$0();
  t1._responseDone$0();
},
 _streamWrite$2: function(buffer, copyBuffer) {
  if (this.get$_done() === true)
    throw $.$$throw($.HttpException$('Response closed'));
  return this._write$2(buffer, copyBuffer);
},
 _streamWriteFrom$3: function(buffer, offset, len) {
  if (this.get$_done() === true)
    throw $.$$throw($.HttpException$('Response closed'));
  return this._writeList$3(buffer, offset, len);
},
 _streamClose$0: function() {
  this._responseEnd$0();
},
 _streamSetNoPendingWriteHandler$1: function(callback) {
  if (this._state !== this.DONE)
    this._httpConnection.set$_onNoPendingWrites(callback);
},
 _streamSetCloseHandler$1: function(callback) {
},
 _streamSetErrorHandler$1: function(callback) {
  this._streamErrorHandler = callback;
},
 _findReasonPhrase$1: function(statusCode) {
  var t1 = this._reasonPhrase;
  if (!(t1 == null))
    return t1;
  switch (statusCode) {
    case 100:
      return 'Continue';
    case 101:
      return 'Switching Protocols';
    case 200:
      return 'OK';
    case 201:
      return 'Created';
    case 202:
      return 'Accepted';
    case 203:
      return 'Non-Authoritative Information';
    case 204:
      return 'No Content';
    case 205:
      return 'Reset Content';
    case 206:
      return 'Partial Content';
    case 300:
      return 'Multiple Choices';
    case 301:
      return 'Moved Permanently';
    case 302:
      return 'Found';
    case 303:
      return 'See Other';
    case 304:
      return 'Not Modified';
    case 305:
      return 'Use Proxy';
    case 307:
      return 'Temporary Redirect';
    case 400:
      return 'Bad Request';
    case 401:
      return 'Unauthorized';
    case 402:
      return 'Payment Required';
    case 403:
      return 'Forbidden';
    case 404:
      return 'Not Found';
    case 405:
      return 'Method Not Allowed';
    case 406:
      return 'Not Acceptable';
    case 407:
      return 'Proxy Authentication Required';
    case 408:
      return 'Request Time-out';
    case 409:
      return 'Conflict';
    case 410:
      return 'Gone';
    case 411:
      return 'Length Required';
    case 412:
      return 'Precondition Failed';
    case 413:
      return 'Request Entity Too Large';
    case 414:
      return 'Request-URI Too Large';
    case 415:
      return 'Unsupported Media Type';
    case 416:
      return 'Requested range not satisfiable';
    case 417:
      return 'Expectation Failed';
    case 500:
      return 'Internal Server Error';
    case 501:
      return 'Not Implemented';
    case 502:
      return 'Bad Gateway';
    case 503:
      return 'Service Unavailable';
    case 504:
      return 'Gateway Time-out';
    case 505:
      return 'Http Version not supported';
    default:
      return 'Status ' + $.S(statusCode);
  }
},
 _writeHeader$0: function() {
  if ($.eqB(this._protocolVersion, '1.0') && $.ltB(this._contentLength, 0))
    throw $.$$throw($.HttpException$('Content length required for HTTP 1.0'));
  var t1 = $.eqB(this._protocolVersion, '1.1');
  var t2 = this._httpConnection;
  if (t1)
    t2._write$1($.CTC10);
  else
    t2._write$1($.CTC11);
  this._writeSP$0();
  var data = $.charCodes($.toString(this._statusCode));
  t1 = this._httpConnection;
  t1._write$1(data);
  this._writeSP$0();
  t1._write$1($.charCodes(this.get$reasonPhrase()));
  this._writeCRLF$0();
  if ($.geB(this._contentLength, 0))
    this._headers.set$2('Content-Length', $.toString(this._contentLength));
  else if ($.ltB(this._contentLength, 0))
    this._headers.set$2('Transfer-Encoding', 'chunked');
  t1 = this._cookies;
  if (!(t1 == null))
    $.forEach(t1, new $._HttpResponse__writeHeader_anon(this));
  var allWritten = this._writeHeaders$0();
  this._state = this.HEADER_SENT;
  return allWritten;
},
 _streamErrorHandler$1: function(arg0) { return this._streamErrorHandler.call$1(arg0); }
};

$$._HttpOutputStream = {"":
 ["_requestOrResponse", "_onError"],
 "super": "_BaseOutputStream",
 write$2: function(buffer, copyBuffer) {
  return this._requestOrResponse._streamWrite$2(buffer, copyBuffer);
},
 write$2$copyBuffer: function(buffer,copyBuffer) {
  return this.write$2(buffer,copyBuffer)
},
 writeFrom$3: function(buffer, offset, len) {
  return this._requestOrResponse._streamWriteFrom$3(buffer, offset, len);
},
 close$0: function() {
  this._requestOrResponse._streamClose$0();
},
 set$onNoPendingWrites: function(callback) {
  this._requestOrResponse._streamSetNoPendingWriteHandler$1(callback);
},
 set$onClosed: function(callback) {
  this._requestOrResponse._streamSetCloseHandler$1(callback);
},
 set$onError: function(callback) {
  this._requestOrResponse._streamSetErrorHandler$1(callback);
}
};

$$._HttpConnectionBase = {"":
 ["_socket?"],
 "super": "Object",
 _connectionEstablished$1: function(socket) {
  this._socket = socket;
  var t1 = this.get$_onData();
  this._socket.set$onData(t1);
  t1 = this.get$_onClosed();
  this._socket.set$onClosed(t1);
  t1 = this.get$_onError();
  this._socket.set$onError(t1);
  t1 = new $._HttpConnectionBase__connectionEstablished_anon();
  this._socket.get$outputStream().set$onError(t1);
},
 _write$2: function(data, copyBuffer) {
  if (!this._error && !this._closing)
    return this._socket.get$outputStream().write$2(data, copyBuffer);
},
 _write$1: function(data) {
  return this._write$2(data,false)
},
 _writeFrom$3: function(buffer, offset, len) {
  if (!this._error && !this._closing)
    return this._socket.get$outputStream().writeFrom$3(buffer, offset, len);
},
 _close$0: function() {
  this._closing = true;
  this._socket.get$outputStream().close$0();
},
 _destroy$0: function() {
  this._closing = true;
  this._socket.close$0();
},
 _onData$0: function() {
  var available = this._socket.available$0();
  if ($.eqB(available, 0))
    return;
  var buffer = $.throwRuntimeError('cannot resolve Uint8List');
  var bytesRead = this._socket.readList$3(buffer, 0, available);
  if ($.gtB(bytesRead, 0)) {
    var t1 = this._httpParser;
    var parsed = t1.writeList$3(buffer, 0, bytesRead);
    if (t1.get$upgrade() !== true)
      if (!$.eqB(parsed, bytesRead))
        if (!(this._socket == null))
          this._destroy$0();
  }
},
 get$_onData: function() { return new $.BoundClosure0(this, '_onData$0'); },
 _onClosed$0: function() {
  this._closing = true;
  this._onConnectionClosed$1(null);
},
 get$_onClosed: function() { return new $.BoundClosure0(this, '_onClosed$0'); },
 _onError$1: function(e) {
  this._error = true;
  var t1 = this._socket;
  if (!(t1 == null))
    t1.close$0();
  this._onConnectionClosed$1(e);
},
 get$_onError: function() { return new $.BoundClosure1(this, '_onError$1'); },
 set$_onNoPendingWrites: function(callback) {
  if (!this._error)
    this._socket.get$outputStream().set$onNoPendingWrites(callback);
},
 hashCode$0: function() {
  return this._hashCode;
},
 _HttpConnectionBase$0: function() {
  var t1 = $._HttpConnectionBase__nextHashCode;
  this._hashCode = t1;
  $._HttpConnectionBase__nextHashCode = $.and($.add(t1, 1), 268435455);
}
};

$$._HttpConnection = {"":
 ["_server", "_request", "_response", "onRequestReceived", "onClosed=", "onError!", "_socket", "_closing", "_error", "_httpParser", "_sendBuffers", "onDetach", "_hashCode"],
 "super": "_HttpConnectionBase",
 _onConnectionClosed$1: function(e) {
  var t1 = e == null;
  if (!t1 && !(this.onError == null) && this._httpParser.get$isIdle() !== true) {
    this.onError$1(e);
    var t2 = this._request;
    if (!(t2 == null) && !(t2.get$_streamErrorHandler() == null))
      t2._streamErrorHandler$1(e);
    t2 = this._response;
    if (!(t2 == null) && !(t2.get$_streamErrorHandler() == null))
      t2._streamErrorHandler$1(e);
  }
  t2 = this._httpParser;
  if (t2.get$isIdle() === true) {
    t1 = new $._HttpConnection__onConnectionClosed_anon(this, e);
    this._socket.get$outputStream().set$onClosed(t1);
    if (this._response == null)
      this._close$0();
    return;
  }
  if (t1)
    t2.connectionClosed$0();
},
 _onRequestStart$3: function(method, uri, version) {
  this._request = $._HttpRequest$(this);
  this._response = $._HttpResponse$(this);
  this._request._onRequestStart$3(method, uri, version);
  this._request.set$_protocolVersion(version);
  this._response.set$_protocolVersion(version);
  var t1 = $.eq(method, 'HEAD');
  this._response.set$_headResponse(t1);
},
 _onResponseStart$3: function(statusCode, reasonPhrase, version) {
},
 _onHeaderReceived$2: function(name$, value) {
  this._request._onHeaderReceived$2(name$, value);
},
 _onHeadersComplete$0: function() {
  this._request._onHeadersComplete$0();
  var t1 = this._httpParser.get$persistentConnection();
  this._response.set$persistentConnection(t1);
  if (!(this.onRequestReceived == null))
    this.onRequestReceived$2(this._request, this._response);
},
 _onDataReceived$1: function(data) {
  this._request._onDataReceived$1(data);
},
 _onDataEnd$1: function(close$) {
  this._request._onDataEnd$0();
},
 _responseDone$0: function() {
  if (this._closing) {
    var t1 = new $._HttpConnection__responseDone_anon(this);
    this._socket.get$outputStream().set$onClosed(t1);
  }
  this._response = null;
},
 onRequestReceived$2: function(arg0, arg1) { return this.onRequestReceived.call$2(arg0, arg1); },
 onClosed$0: function() { return this.onClosed.call$0(); },
 onError$1: function(arg0) { return this.onError.call$1(arg0); },
 _HttpConnection$1: function(_server) {
  var t1 = new $.anon(this);
  var t2 = this._httpParser;
  t2.requestStart = t1;
  t2.responseStart = new $.anon0(this);
  t2.headerReceived = new $.anon1(this);
  t2.headersComplete = new $.anon2(this);
  t2.dataReceived = new $.anon3(this);
  t2.dataEnd = new $.anon4(this);
  t2.error = new $.anon5(this);
}
};

$$._RequestHandlerRegistration = {"":
 ["_matcher", "_handler?"],
 "super": "Object",
 _matcher$1: function(arg0) { return this._matcher.call$1(arg0); }
};

$$._HttpServer = {"":
 ["_server", "_closeServer", "_connections?", "_handlers", "_defaultHandler", "_onError?"],
 "super": "Object",
 listen$3: function(host, port, backlog) {
  this.listenOn$1($.ServerSocket_ServerSocket(host, port, backlog));
  this._closeServer = true;
},
 listen$2: function(host,port) {
  return this.listen$3(host,port,128)
},
 listenOn$1: function(serverSocket) {
  serverSocket.set$onConnection(new $._HttpServer_listenOn_onConnection(this));
  this._server = serverSocket;
  this._closeServer = false;
},
 addRequestHandler$2: function(matcher, handler) {
  this._handlers.push($._RequestHandlerRegistration$(matcher, handler));
},
 close$0: function() {
  var t1 = this._server;
  if (!(t1 == null) && this._closeServer)
    t1.close$0();
  this._server = null;
  for (var t1 = this._connections, t2 = $.iterator(t1); t2.hasNext$0() === true;)
    t2.next$0()._destroy$0();
  $.clear(t1);
},
 set$onError: function(callback) {
  this._onError = callback;
},
 _handleRequest$2: function(request, response) {
  for (var t1 = this._handlers, i = 0; i < t1.length; ++i)
    if (t1[i]._matcher$1(request) === true) {
      if (i >= t1.length)
        throw $.ioore(i);
      var handler = t1[i].get$_handler();
      try {
        handler.call$2(request, response);
      } catch (exception) {
        t1 = $.unwrapException(exception);
        var e = t1;
        if (!(this._onError == null))
          this._onError$1(e);
        else
          throw $.$$throw(e);
      }

      return;
    }
  if (!(this._defaultHandler == null))
    this._defaultHandler$2(request, response);
  else {
    response.set$statusCode(404);
    response.set$contentLength(0);
    response.get$outputStream().close$0();
  }
},
 get$_handleRequest: function() { return new $.BoundClosure(this, '_handleRequest$2'); },
 _defaultHandler$2: function(arg0, arg1) { return this._defaultHandler.call$2(arg0, arg1); },
 _onError$1: function(arg0) { return this._onError.call$1(arg0); }
};

$$._HttpParser = {"":
 ["_state", "_httpVersionIndex", "_messageType", "_method_or_status_code", "_uri_or_reason_phrase", "_headerField", "_headerValue", "_httpVersion", "_contentLength", "_persistentConnection", "_connectionUpgrade", "_chunked", "_noMessageBody", "_responseToMethod", "_remainingContent", "_unparsedData", "requestStart", "responseStart", "headerReceived", "headersComplete", "dataReceived", "dataEnd", "error"],
 "super": "Object",
 writeList$3: function(buffer, offset, count) {
  var index = offset;
  var lastIndex = $.add(offset, count);
  try {
    var t1 = this._state;
    if (t1 === 25)
      throw $.$$throw($.HttpParserException$('Data on closed connection'));
    if (t1 === 26)
      throw $.$$throw($.HttpParserException$('Data on upgraded connection'));
    if (t1 === 27)
      throw $.$$throw($.HttpParserException$('Data on failed connection'));
    while (true) {
      if ($.ltB(index, lastIndex)) {
        t1 = this._state;
        t1 = !(t1 === 27) && !(t1 === 26);
      } else
        t1 = false;
      if (!t1)
        break;
      var byte$ = $.index(buffer, index);
      switch (this._state) {
        case 0:
          if ($.eqB(byte$, $.CTC17[0])) {
            this._httpVersionIndex = 1;
            this._state = 1;
          } else {
            if (this._isTokenChar$1(byte$) !== true)
              throw $.$$throw($.HttpParserException$('Invalid request method'));
            this._method_or_status_code.addCharCode$1(byte$);
            this._state = 3;
          }
          break;
        case 1:
          if ($.ltB(this._httpVersionIndex, 4)) {
            t1 = byte$;
            var t2 = this._httpVersionIndex;
            if (t2 !== (t2 | 0))
              throw $.iae(t2);
            if (t2 < 0 || t2 >= 4)
              throw $.ioore(t2);
            t1 = $.eqB(t1, $.CTC17[t2]);
          } else
            t1 = false;
          if (t1)
            this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
          else if ($.eqB(this._httpVersionIndex, 4) && $.eqB(byte$, 47)) {
            this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
            this._state = 2;
          } else {
            for (var i = 0; $.ltB(i, this._httpVersionIndex); i = $.add(i, 1)) {
              t1 = this._method_or_status_code;
              t2 = i;
              if (t2 !== (t2 | 0))
                throw $.iae(t2);
              if (t2 < 0 || t2 >= 4)
                throw $.ioore(t2);
              t1.addCharCode$1($.CTC17[t2]);
            }
            if ($.eqB(byte$, 32))
              this._state = 4;
            else {
              this._method_or_status_code.addCharCode$1(byte$);
              this._httpVersion = 0;
              this._state = 3;
            }
          }
          break;
        case 2:
          if ($.ltB(this._httpVersionIndex, 7)) {
            t1 = byte$;
            t2 = this._httpVersionIndex;
            if (t2 !== (t2 | 0))
              throw $.iae(t2);
            if (t2 < 0 || t2 >= 7)
              throw $.ioore(t2);
            this._expect$2(t1, $.CTC18[t2]);
            this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
          } else if ($.eqB(this._httpVersionIndex, 7) && $.eqB(byte$, 49)) {
            this._httpVersion = 2;
            this._persistentConnection = true;
            this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
          } else if ($.eqB(this._httpVersionIndex, 7) && $.eqB(byte$, 48)) {
            this._httpVersion = 1;
            this._persistentConnection = false;
            this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
          } else if ($.eqB(this._httpVersionIndex, 8)) {
            this._expect$2(byte$, 32);
            this._state = 7;
          } else
            throw $.$$throw($.HttpParserException$('Invalid response line'));
          break;
        case 3:
          if ($.eqB(byte$, 32))
            this._state = 4;
          else {
            if (!$.eqB($.indexOf$1($.CTC19, byte$), -1))
              throw $.$$throw($.HttpParserException$('Invalid request method'));
            this._method_or_status_code.addCharCode$1(byte$);
          }
          break;
        case 4:
          if ($.eqB(byte$, 32)) {
            this._state = 5;
            this._httpVersionIndex = 0;
          } else {
            if ($.eqB(byte$, 13) || $.eqB(byte$, 10))
              throw $.$$throw($.HttpParserException$('Invalid request URI'));
            this._uri_or_reason_phrase.addCharCode$1(byte$);
          }
          break;
        case 5:
          if ($.ltB(this._httpVersionIndex, 7)) {
            t1 = byte$;
            t2 = this._httpVersionIndex;
            if (t2 !== (t2 | 0))
              throw $.iae(t2);
            if (t2 < 0 || t2 >= 8)
              throw $.ioore(t2);
            this._expect$2(t1, $.CTC10[t2]);
            this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
          } else if ($.eqB(this._httpVersionIndex, 7))
            if ($.eqB(byte$, 49)) {
              this._httpVersion = 2;
              this._persistentConnection = true;
              this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
            } else if ($.eqB(byte$, 48)) {
              this._httpVersion = 1;
              this._persistentConnection = false;
              this._httpVersionIndex = $.add(this._httpVersionIndex, 1);
            } else
              throw $.$$throw($.HttpParserException$('Invalid response line'));
          else {
            this._expect$2(byte$, 13);
            this._state = 6;
          }
          break;
        case 6:
          this._expect$2(byte$, 10);
          this._messageType = 1;
          if (!(this.requestStart == null))
            this.requestStart$3($.toString(this._method_or_status_code), $.toString(this._uri_or_reason_phrase), this.get$version());
          $.clear(this._method_or_status_code);
          $.clear(this._uri_or_reason_phrase);
          this._state = 10;
          break;
        case 7:
          if ($.eqB(byte$, 32)) {
            if (!$.eqB($.get$length(this._method_or_status_code), 3))
              throw $.$$throw($.HttpParserException$('Invalid response status code'));
            this._state = 8;
          } else if ($.ltB(byte$, 48) && $.ltB(57, byte$))
            throw $.$$throw($.HttpParserException$('Invalid response status code'));
          else
            this._method_or_status_code.addCharCode$1(byte$);
          break;
        case 8:
          if ($.eqB(byte$, 13)) {
            if ($.eqB($.get$length(this._uri_or_reason_phrase), 0))
              throw $.$$throw($.HttpParserException$('Invalid response reason phrase'));
            this._state = 9;
          } else {
            if ($.eqB(byte$, 13) || $.eqB(byte$, 10))
              throw $.$$throw($.HttpParserException$('Invalid response reason phrase'));
            this._uri_or_reason_phrase.addCharCode$1(byte$);
          }
          break;
        case 9:
          this._expect$2(byte$, 10);
          var statusCode = $.parseInt($.toString(this._method_or_status_code));
          if ($.ltB(statusCode, 100) || $.gtB(statusCode, 599))
            throw $.$$throw($.HttpParserException$('Invalid response status code'));
          else
            this._noMessageBody = $.leB(statusCode, 199) || $.eqB(statusCode, 204) || $.eqB(statusCode, 304);
          if (!(this.responseStart == null))
            this.responseStart$3(statusCode, $.toString(this._uri_or_reason_phrase), this.get$version());
          $.clear(this._method_or_status_code);
          $.clear(this._uri_or_reason_phrase);
          this._state = 10;
          break;
        case 10:
          if ($.eqB(byte$, 13))
            this._state = 16;
          else {
            this._headerField.addCharCode$1(this._toLowerCase$1(byte$));
            this._state = 11;
          }
          break;
        case 11:
          if ($.eqB(byte$, 58))
            this._state = 12;
          else {
            if (this._isTokenChar$1(byte$) !== true)
              throw $.$$throw($.HttpParserException$('Invalid header field name'));
            this._headerField.addCharCode$1(this._toLowerCase$1(byte$));
          }
          break;
        case 12:
          if ($.eqB(byte$, 13))
            this._state = 14;
          else if (!$.eqB(byte$, 32) && !$.eqB(byte$, 9)) {
            this._headerValue.addCharCode$1(byte$);
            this._state = 13;
          }
          break;
        case 13:
          if ($.eqB(byte$, 13))
            this._state = 14;
          else
            this._headerValue.addCharCode$1(byte$);
          break;
        case 14:
          this._expect$2(byte$, 10);
          this._state = 15;
          break;
        case 15:
          if ($.eqB(byte$, 32) || $.eqB(byte$, 9))
            this._state = 12;
          else {
            var headerField = $.toString(this._headerField);
            var headerValue = $.toString(this._headerValue);
            var reportHeader = true;
            if ($.eqB(headerField, 'content-length') && this._chunked !== true)
              this._contentLength = $.parseInt(headerValue);
            else if ($.eqB(headerField, 'connection')) {
              var tokens = this._tokenizeFieldValue$1(headerValue);
              for (var i0 = 0; $.ltB(i0, $.get$length(tokens)); i0 = $.add(i0, 1)) {
                var token = $.toLowerCase($.index(tokens, i0));
                if ($.eqB(token, 'keep-alive'))
                  this._persistentConnection = true;
                else if ($.eqB(token, 'close'))
                  this._persistentConnection = false;
                else if ($.eqB(token, 'upgrade'))
                  this._connectionUpgrade = true;
                if (!(this.headerReceived == null))
                  this.headerReceived$2(headerField, token);
              }
              reportHeader = false;
            } else if ($.eqB(headerField, 'transfer-encoding') && $.eqB($.toLowerCase(headerValue), 'chunked')) {
              this._chunked = true;
              this._contentLength = -1;
            }
            if (reportHeader === true && !(this.headerReceived == null))
              this.headerReceived$2(headerField, headerValue);
            $.clear(this._headerField);
            $.clear(this._headerValue);
            if ($.eqB(byte$, 13))
              this._state = 16;
            else {
              this._headerField.addCharCode$1(this._toLowerCase$1(byte$));
              this._state = 11;
            }
          }
          break;
        case 16:
          this._expect$2(byte$, 10);
          if (this._connectionUpgrade === true) {
            this._state = 26;
            this._unparsedData = $.getRange(buffer, $.add(index, 1), $.sub(count, $.sub($.add(index, 1), offset)));
            if (!(this.headersComplete == null))
              this.headersComplete$0();
          } else {
            if (!(this.headersComplete == null))
              this.headersComplete$0();
            if (this._chunked === true) {
              this._state = 19;
              this._remainingContent = 0;
            } else {
              if (!$.eqB(this._contentLength, 0))
                if (!(this._messageType === 1 && $.eqB(this._contentLength, -1)))
                  if (this._messageType === 0)
                    t1 = this._noMessageBody === true || false;
                  else
                    t1 = false;
                else
                  t1 = true;
              else
                t1 = true;
              if (t1) {
                this._bodyEnd$0();
                this._reset$0();
              } else if ($.gtB(this._contentLength, 0)) {
                this._remainingContent = this._contentLength;
                this._state = 24;
              } else
                this._state = 24;
            }
          }
          break;
        case 17:
          this._expect$2(byte$, 13);
          this._state = 18;
          break;
        case 18:
          this._expect$2(byte$, 10);
          this._state = 19;
          break;
        case 19:
          if ($.eqB(byte$, 13))
            this._state = 21;
          else if ($.eqB(byte$, 59))
            this._state = 20;
          else {
            var value = this._expectHexDigit$1(byte$);
            this._remainingContent = $.add($.mul(this._remainingContent, 16), value);
          }
          break;
        case 20:
          if ($.eqB(byte$, 13))
            this._state = 21;
          break;
        case 21:
          this._expect$2(byte$, 10);
          if ($.gtB(this._remainingContent, 0))
            this._state = 24;
          else
            this._state = 22;
          break;
        case 22:
          this._expect$2(byte$, 13);
          this._state = 23;
          break;
        case 23:
          this._expect$2(byte$, 10);
          this._bodyEnd$0();
          this._reset$0();
          break;
        case 24:
          var dataAvailable = $.sub(lastIndex, index);
          var data = null;
          t1 = this._remainingContent;
          if (t1 == null || $.leB(dataAvailable, t1)) {
            data = $.throwRuntimeError('cannot resolve Uint8List');
            $.setRange$4(data, 0, dataAvailable, buffer, index);
          } else {
            data = $.throwRuntimeError('cannot resolve Uint8List');
            $.setRange$4(data, 0, this._remainingContent, buffer, index);
          }
          if (!(this.dataReceived == null))
            this.dataReceived$1(data);
          t1 = this._remainingContent;
          if (!(t1 == null))
            this._remainingContent = $.sub(t1, $.get$length(data));
          index = $.add(index, $.get$length(data));
          if ($.eqB(this._remainingContent, 0))
            if (this._chunked !== true) {
              this._bodyEnd$0();
              this._reset$0();
            } else
              this._state = 17;
          index = $.sub(index, 1);
          break;
        case 27:
          break;
        default:
          break;
      }
      index = $.add(index, 1);
    }
  } catch (exception) {
    t1 = $.unwrapException(exception);
    var e = t1;
    if (!(this.error == null)) {
      this.error$1(e);
      this._state = 27;
    } else
      throw $.$$throw(e);
  }

  return $.sub(index, offset);
},
 connectionClosed$0: function() {
  if ($.ltB(this._state, 17)) {
    this._state = 27;
    var e = $.HttpParserException$('Connection closed before full header was received');
    if (!(this.error == null)) {
      this.error$1(e);
      return;
    }
    throw $.$$throw(e);
  }
  if (this._chunked !== true && $.eqB(this._contentLength, -1)) {
    if (!(this._state === 0))
      if (!(this.dataEnd == null))
        this.dataEnd$1(true);
    this._state = 25;
  } else {
    this._state = 27;
    e = $.HttpParserException$('Connection closed before full body was received');
    if (!(this.error == null)) {
      this.error$1(e);
      return;
    }
    throw $.$$throw(e);
  }
},
 get$version: function() {
  switch (this._httpVersion) {
    case 1:
      return '1.0';
    case 2:
      return '1.1';
  }
  return;
},
 get$upgrade: function() {
  return this._connectionUpgrade === true && this._state === 26;
},
 get$persistentConnection: function() {
  return this._persistentConnection;
},
 get$isIdle: function() {
  return this._state === 0;
},
 _bodyEnd$0: function() {
  if (!(this.dataEnd == null))
    this.dataEnd$1(this._messageType === 0 && this._persistentConnection !== true);
},
 _reset$0: function() {
  this._state = 0;
  this._messageType = 0;
  this._headerField = $.StringBuffer_StringBuffer('');
  this._headerValue = $.StringBuffer_StringBuffer('');
  this._method_or_status_code = $.StringBuffer_StringBuffer('');
  this._uri_or_reason_phrase = $.StringBuffer_StringBuffer('');
  this._httpVersion = 0;
  this._contentLength = -1;
  this._persistentConnection = false;
  this._connectionUpgrade = false;
  this._chunked = false;
  this._noMessageBody = false;
  this._responseToMethod = null;
  this._remainingContent = null;
},
 _isTokenChar$1: function(byte$) {
  if (typeof byte$ !== 'number')
    return this._isTokenChar$1$bailout(1, byte$);
  if (byte$ > 31)
    if (byte$ < 128) {
      var t1 = $.indexOf$1($.CTC20, byte$);
      if (typeof t1 !== 'number')
        return this._isTokenChar$1$bailout(2, t1);
      t1 = t1 === -1;
    } else
      t1 = false;
  else
    t1 = false;
  return t1;
},
 _isTokenChar$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      var byte$ = env0;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && $.gtB(byte$, 31))
        switch (state0) {
          case 0:
          case 2:
            if (state0 === 2 || state0 === 0 && $.ltB(byte$, 128))
              switch (state0) {
                case 0:
                  var t1 = $.indexOf$1($.CTC20, byte$);
                case 2:
                  state0 = 0;
                  t1 = $.eqB(t1, -1);
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      return t1;
  }
},
 _tokenizeFieldValue$1: function(headerValue) {
  if (typeof headerValue !== 'string' && (typeof headerValue !== 'object' || headerValue === null || headerValue.constructor !== Array && !headerValue.is$JavaScriptIndexingBehavior))
    return this._tokenizeFieldValue$1$bailout(1, headerValue, 0, 0, 0, 0);
  var tokens = $.ListImplementation_List(null);
  for (var index = 0, start = 0; index < headerValue.length;) {
    var t1 = headerValue[index];
    if (typeof t1 !== 'string')
      return this._tokenizeFieldValue$1$bailout(2, headerValue, tokens, t1, index, start);
    if (t1 === ',') {
      tokens.push($.substring$2(headerValue, start, index));
      var start0 = index + 1;
      start = start0;
    } else {
      if (!(t1 === ' '))
        t1 = t1 === '\x09';
      else
        t1 = true;
      if (t1)
        ++start;
    }
    ++index;
  }
  tokens.push($.substring$2(headerValue, start, index));
  return tokens;
},
 _tokenizeFieldValue$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      var headerValue = env0;
      break;
    case 2:
      headerValue = env0;
      tokens = env1;
      t1 = env2;
      index = env3;
      start = env4;
      break;
    case 3:
      headerValue = env0;
      index = env1;
      t1 = env2;
      start = env3;
      tokens = env4;
      break;
    case 4:
      headerValue = env0;
      index = env1;
      t1 = env2;
      start = env3;
      tokens = env4;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var tokens = $.ListImplementation_List(null);
      var index = 0;
      var start = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(index, $.get$length(headerValue)))
                break L0;
              var t1 = $.index(headerValue, index);
            case 2:
              state0 = 0;
            default:
              if (state0 === 0 && $.eqB(t1, ',')) {
                tokens.push($.substring$2(headerValue, start, index));
                var start0 = index + 1;
                start = start0;
              } else
                switch (state0) {
                  case 0:
                    t1 = $.index(headerValue, index);
                  case 3:
                    state0 = 0;
                  case 4:
                    if (state0 === 4 || state0 === 0 && !$.eqB(t1, ' '))
                      switch (state0) {
                        case 0:
                          t1 = $.index(headerValue, index);
                        case 4:
                          state0 = 0;
                          t1 = $.eqB(t1, '\x09');
                      }
                    else
                      t1 = true;
                    if (t1)
                      ++start;
                }
              ++index;
          }
      tokens.push($.substring$2(headerValue, start, index));
      return tokens;
  }
},
 _toLowerCase$1: function(byte$) {
  if (typeof byte$ !== 'number')
    return this._toLowerCase$1$bailout(1, byte$, 0, 0, 0);
  var aCode = $.charCodeAt('A', 0);
  if (typeof aCode !== 'number')
    return this._toLowerCase$1$bailout(2, byte$, aCode, 0, 0);
  var zCode = $.charCodeAt('Z', 0);
  if (typeof zCode !== 'number')
    return this._toLowerCase$1$bailout(3, byte$, zCode, aCode, 0);
  var t3 = $.charCodeAt('a', 0);
  if (typeof t3 !== 'number')
    return this._toLowerCase$1$bailout(4, byte$, zCode, t3, aCode);
  var delta = t3 - aCode;
  if (aCode <= byte$ && byte$ <= zCode)
    var t1 = byte$ + delta;
  else
    t1 = byte$;
  return t1;
},
 _toLowerCase$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var byte$ = env0;
      break;
    case 2:
      byte$ = env0;
      aCode = env1;
      break;
    case 3:
      byte$ = env0;
      zCode = env1;
      aCode = env2;
      break;
    case 4:
      byte$ = env0;
      zCode = env1;
      t3 = env2;
      aCode = env3;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var aCode = $.charCodeAt('A', 0);
    case 2:
      state0 = 0;
      var zCode = $.charCodeAt('Z', 0);
    case 3:
      state0 = 0;
      var t3 = $.charCodeAt('a', 0);
    case 4:
      state0 = 0;
      var delta = $.sub(t3, aCode);
      return $.leB(aCode, byte$) && $.leB(byte$, zCode) ? $.add(byte$, delta) : byte$;
  }
},
 _expect$2: function(val1, val2) {
  if (!$.eqB(val1, val2))
    throw $.$$throw($.HttpParserException$('Failed to parse HTTP'));
},
 _expectHexDigit$1: function(byte$) {
  if (typeof byte$ !== 'number')
    return this._expectHexDigit$1$bailout(1, byte$);
  if (48 <= byte$ && byte$ <= 57)
    return byte$ - 48;
  else if (65 <= byte$ && byte$ <= 70)
    return byte$ - 65 + 10;
  else if (97 <= byte$ && byte$ <= 102)
    return byte$ - 97 + 10;
  else
    throw $.$$throw($.HttpParserException$('Failed to parse HTTP'));
},
 _expectHexDigit$1$bailout: function(state0, byte$) {
  if ($.leB(48, byte$) && $.leB(byte$, 57))
    return $.sub(byte$, 48);
  else if ($.leB(65, byte$) && $.leB(byte$, 70))
    return $.add($.sub(byte$, 65), 10);
  else if ($.leB(97, byte$) && $.leB(byte$, 102))
    return $.add($.sub(byte$, 97), 10);
  else
    throw $.$$throw($.HttpParserException$('Failed to parse HTTP'));
},
 requestStart$3: function(arg0, arg1, arg2) { return this.requestStart.call$3(arg0, arg1, arg2); },
 responseStart$3: function(arg0, arg1, arg2) { return this.responseStart.call$3(arg0, arg1, arg2); },
 headerReceived$2: function(arg0, arg1) { return this.headerReceived.call$2(arg0, arg1); },
 headersComplete$0: function() { return this.headersComplete.call$0(); },
 dataReceived$1: function(arg0) { return this.dataReceived.call$1(arg0); },
 dataEnd$1: function(arg0) { return this.dataEnd.call$1(arg0); },
 error$1: function(arg0) { return this.error.call$1(arg0); },
 _HttpParser$0: function() {
  this._reset$0();
}
};

$$.HttpParserException = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'HttpParserException: ' + this.message;
}
};

$$.Encoding = {"":
 ["name"],
 "super": "Object"
};

$$.StreamException = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'StreamException: ' + this.message;
}
};

$$._BaseOutputStream = {"":
 ["_onError?"],
 "super": "Object",
 writeString$2: function(string, encoding) {
  if ($.gtB($.get$length(string), 0))
    return this.write$2$copyBuffer($._StringEncoders_encoder(encoding).encodeString$1(string), false);
  return true;
},
 writeString$1: function(string) {
  return this.writeString$2(string,Isolate.$isolateProperties.CTC13)
},
 set$onError: function(callback) {
  this._onError = callback;
},
 _onError$1: function(arg0) { return this._onError.call$1(arg0); }
};

$$._UTF8Encoder = {"":
 [],
 "super": "Object",
 encodeString$1: function(string) {
  $._UTF8Encoder__encodeString(string, null);
  var result = $.throwRuntimeError('cannot resolve Uint8List');
  $._UTF8Encoder__encodeString(string, result);
  return result;
}
};

$$._Latin1Encoder = {"":
 [],
 "super": "Object",
 encodeString$1: function(string) {
  var result = $.throwRuntimeError('cannot resolve Uint8List');
  if (typeof result !== 'object' || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.is$JavaScriptIndexingBehavior)
    return this.encodeString$1$bailout(1, string, result);
  for (var i = 0; $.ltB(i, $.get$length(string)); ++i) {
    var charCode = $.charCodeAt(string, i);
    if ($.gtB(charCode, 255))
      throw $.$$throw($.EncoderException$('No ISO_8859_1 encoding for code point ' + $.S(charCode)));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = charCode;
  }
  return result;
},
 encodeString$1$bailout: function(state0, string, result) {
  for (var i = 0; $.ltB(i, $.get$length(string)); ++i) {
    var charCode = $.charCodeAt(string, i);
    if ($.gtB(charCode, 255))
      throw $.$$throw($.EncoderException$('No ISO_8859_1 encoding for code point ' + $.S(charCode)));
    $.indexSet(result, i, charCode);
  }
  return result;
}
};

$$._AsciiEncoder = {"":
 [],
 "super": "Object",
 encodeString$1: function(string) {
  var result = $.throwRuntimeError('cannot resolve Uint8List');
  if (typeof result !== 'object' || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.is$JavaScriptIndexingBehavior)
    return this.encodeString$1$bailout(1, string, result);
  for (var i = 0; $.ltB(i, $.get$length(string)); ++i) {
    var charCode = $.charCodeAt(string, i);
    if ($.gtB(charCode, 127))
      throw $.$$throw($.EncoderException$('No ASCII encoding for code point ' + $.S(charCode)));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = charCode;
  }
  return result;
},
 encodeString$1$bailout: function(state0, string, result) {
  for (var i = 0; $.ltB(i, $.get$length(string)); ++i) {
    var charCode = $.charCodeAt(string, i);
    if ($.gtB(charCode, 127))
      throw $.$$throw($.EncoderException$('No ASCII encoding for code point ' + $.S(charCode)));
    $.indexSet(result, i, charCode);
  }
  return result;
}
};

$$.EncoderException = {"":
 ["message"],
 "super": "Object",
 toString$0: function() {
  return 'EncoderException: ' + this.message;
}
};

$$._ListRange = {"":
 ["_source", "_offset", "_lib1_length"],
 "super": "Object",
 iterator$0: function() {
  var t1 = this._source;
  var t2 = this._offset;
  var t3 = this._lib1_length;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  return $._ListRangeIteratorImpl$(t1, t2, t2 + t3);
},
 get$length: function() {
  return this._lib1_length;
},
 _ListRange$3: function(source, offset, length$) {
  var t1 = this._offset;
  if (t1 < 0 || $.gtB(t1, $.get$length(this._source)))
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = this._lib1_length;
  if (!(t2 == null) && $.ltB(t2, 0))
    throw $.$$throw($.IndexOutOfRangeException$(t2));
  if ($.gtB($.add(t2, t1), $.get$length(this._source)))
    throw $.$$throw($.IndexOutOfRangeException$($.add(t2, t1)));
}
};

$$._ListRangeIteratorImpl = {"":
 ["_source", "_offset", "_end"],
 "super": "Object",
 hasNext$0: function() {
  return $.lt(this._offset, this._end);
},
 next$0: function() {
  var t1 = this._source;
  var t2 = this._offset;
  this._offset = $.add(t2, 1);
  return $.index(t1, t2);
},
 get$position: function() {
  return this._offset;
},
 backup$1: function(by) {
  this._offset = $.sub(this._offset, by);
},
 backup$0: function() {
  return this.backup$1(1)
},
 get$remaining: function() {
  return $.sub(this._end, this._offset);
}
};

$$.Utf8Decoder = {"":
 ["utf8EncodedBytesIterator", "replacementCodepoint"],
 "super": "Object",
 decodeRest$0: function() {
  var codepoints = $.ListImplementation_List(this.utf8EncodedBytesIterator.get$remaining());
  for (var i = 0; this.hasNext$0() === true;) {
    var i0 = i + 1;
    var t1 = this.next$0();
    if (i >= codepoints.length)
      throw $.ioore(i);
    codepoints[i] = t1;
    i = i0;
  }
  if (i === codepoints.length)
    return codepoints;
  else {
    var truncCodepoints = $.ListImplementation_List(i);
    $.setRange$3(truncCodepoints, 0, i, codepoints);
    return truncCodepoints;
  }
},
 hasNext$0: function() {
  return this.utf8EncodedBytesIterator.hasNext$0();
},
 next$0: function() {
  var t1 = this.utf8EncodedBytesIterator;
  var value = t1.next$0();
  if (value !== (value | 0))
    return this.next$0$bailout(1, t1, value, 0, 0, 0);
  if (value < 0) {
    var t2 = this.replacementCodepoint;
    return t2;
  } else if (value <= 127)
    return value;
  else if (value < 192) {
    t2 = this.replacementCodepoint;
    return t2;
  } else if (value < 224) {
    value -= 192;
    var additionalBytes = 1;
  } else if (value < 240) {
    value -= 224;
    additionalBytes = 2;
  } else if (value < 248) {
    value -= 240;
    additionalBytes = 3;
  } else if (value < 252) {
    value -= 248;
    additionalBytes = 4;
  } else {
    if (value < 254)
      value -= 252;
    else {
      t2 = this.replacementCodepoint;
      return t2;
    }
    additionalBytes = 5;
  }
  var j = 0;
  while (true) {
    if (!(j < additionalBytes && t1.hasNext$0() === true))
      break;
    var nextValue = t1.next$0();
    if (nextValue !== (nextValue | 0))
      return this.next$0$bailout(2, value, t1, j, nextValue, additionalBytes);
    if (nextValue > 127 && nextValue < 192)
      var value0 = (value << 6 | nextValue & 63) >>> 0;
    else {
      if (nextValue >= 192)
        t1.backup$0();
      break;
    }
    ++j;
    value = value0;
  }
  if (j === additionalBytes)
    var validSequence = value < 55296 || value > 57343;
  else
    validSequence = false;
  if (!(additionalBytes === 1 && value > 127))
    if (!(additionalBytes === 2 && value > 2047)) {
      t2 = additionalBytes === 3 && value > 65535;
      var nonOverlong = t2;
    } else
      nonOverlong = true;
  else
    nonOverlong = true;
  var inRange = value <= 1114111;
  if (validSequence && nonOverlong && inRange)
    return value;
  else {
    t2 = this.replacementCodepoint;
    return t2;
  }
},
 next$0$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env0;
      value = env1;
      break;
    case 2:
      value = env0;
      t1 = env1;
      j = env2;
      nextValue = env3;
      additionalBytes = env4;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.utf8EncodedBytesIterator;
      var value = t1.next$0();
    case 1:
      state0 = 0;
      if ($.ltB(value, 0)) {
        var t2 = this.replacementCodepoint;
        return t2;
      } else if ($.leB(value, 127))
        return value;
      else if ($.ltB(value, 192)) {
        t2 = this.replacementCodepoint;
        return t2;
      } else if ($.ltB(value, 224)) {
        value = $.sub(value, 192);
        var additionalBytes = 1;
      } else if ($.ltB(value, 240)) {
        value = $.sub(value, 224);
        additionalBytes = 2;
      } else if ($.ltB(value, 248)) {
        value = $.sub(value, 240);
        additionalBytes = 3;
      } else if ($.ltB(value, 252)) {
        value = $.sub(value, 248);
        additionalBytes = 4;
      } else {
        if ($.ltB(value, 254))
          value = $.sub(value, 252);
        else {
          t2 = this.replacementCodepoint;
          return t2;
        }
        additionalBytes = 5;
      }
      var j = 0;
    case 2:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(j < additionalBytes && t1.hasNext$0() === true))
                break L0;
              var nextValue = t1.next$0();
            case 2:
              state0 = 0;
              if ($.gtB(nextValue, 127) && $.ltB(nextValue, 192))
                var value0 = $.or($.shl(value, 6), $.and(nextValue, 63));
              else {
                if ($.geB(nextValue, 192))
                  t1.backup$0();
                break L0;
              }
              ++j;
              value = value0;
          }
      if (j === additionalBytes)
        var validSequence = $.ltB(value, 55296) || $.gtB(value, 57343);
      else
        validSequence = false;
      if (!(additionalBytes === 1 && $.gtB(value, 127)))
        if (!(additionalBytes === 2 && $.gtB(value, 2047))) {
          t2 = additionalBytes === 3 && $.gtB(value, 65535);
          var nonOverlong = t2;
        } else
          nonOverlong = true;
      else
        nonOverlong = true;
      var inRange = $.leB(value, 1114111);
    case 3:
      if (state0 === 0 && validSequence && nonOverlong && inRange)
        return value;
      else
        switch (state0) {
          case 0:
            t2 = this.replacementCodepoint;
            return t2;
        }
  }
}
};

$$.main_anon = {"":
 [],
 "super": "Closure",
 call$1: function(request) {
  return true;
}
};

$$.Maps__emitMap_anon = {"":
 ["result_3", "box_0", "visiting_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_3, ', ');
  t1.first_1 = false;
  t1 = this.result_3;
  var t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.DateImplementation_toString_fourDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  var absN = $.abs(n);
  var sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$.DateImplementation_toString_threeDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$.DateImplementation_toString_twoDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.HashSetImplementation_forEach__ = {"":
 ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$._HttpServer_listenOn_onConnection = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(socket) {
  var t1 = this.this_0;
  var connection = $._HttpConnection$(t1);
  connection._connectionEstablished$1(socket);
  $.add$1(t1.get$_connections(), connection);
  connection.onRequestReceived = t1.get$_handleRequest();
  connection.onClosed = new $._HttpServer_listenOn_onConnection_anon(t1, connection);
  connection.onDetach = new $._HttpServer_listenOn_onConnection_anon0(t1, connection);
  connection.onError = new $._HttpServer_listenOn_onConnection_anon1(t1, connection);
}
};

$$._HttpServer_listenOn_onConnection_anon = {"":
 ["this_2", "connection_1"],
 "super": "Closure",
 call$0: function() {
  return this.this_2.get$_connections().remove$1(this.connection_1);
}
};

$$._HttpServer_listenOn_onConnection_anon0 = {"":
 ["this_4", "connection_3"],
 "super": "Closure",
 call$0: function() {
  return this.this_4.get$_connections().remove$1(this.connection_3);
}
};

$$._HttpServer_listenOn_onConnection_anon1 = {"":
 ["this_6", "connection_5"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_6;
  t1.get$_connections().remove$1(this.connection_5);
  if (!(t1.get$_onError() == null))
    t1._onError$1(e);
  else
    throw $.$$throw(e);
}
};

$$._HttpConnection__onConnectionClosed_anon = {"":
 ["this_1", "e_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_1;
  t1._destroy$0();
  if (!(t1.get$onClosed() == null) && this.e_0 == null)
    t1.onClosed$0();
}
};

$$._HttpConnectionBase__connectionEstablished_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return;
}
};

$$.anon = {"":
 ["this_0"],
 "super": "Closure",
 call$3: function(method, uri, version) {
  return this.this_0._onRequestStart$3(method, uri, version);
}
};

$$.anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$3: function(statusCode, reasonPhrase, version) {
  return this.this_1._onResponseStart$3(statusCode, reasonPhrase, version);
}
};

$$.anon1 = {"":
 ["this_2"],
 "super": "Closure",
 call$2: function(name$, value) {
  return this.this_2._onHeaderReceived$2(name$, value);
}
};

$$.anon2 = {"":
 ["this_3"],
 "super": "Closure",
 call$0: function() {
  return this.this_3._onHeadersComplete$0();
}
};

$$.anon3 = {"":
 ["this_4"],
 "super": "Closure",
 call$1: function(data) {
  return this.this_4._onDataReceived$1(data);
}
};

$$.anon4 = {"":
 ["this_5"],
 "super": "Closure",
 call$1: function(close$) {
  return this.this_5._onDataEnd$1(close$);
}
};

$$.anon5 = {"":
 ["this_6"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_6._onError$1(e);
}
};

$$.DoubleLinkedQueue_length__ = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._HttpHeaders_toString_anon = {"":
 ["this_1", "sb_0"],
 "super": "Closure",
 call$2: function(name$, values) {
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior))
    return this.call$2$bailout(1, name$, values);
  var t1 = this.sb_0;
  $.add$1(t1, name$);
  $.add$1(t1, ': ');
  for (var t2 = this.this_1._foldHeader$1(name$) === true, i = 0; i < values.length; ++i) {
    if (i > 0)
      if (t2)
        $.add$1(t1, ', ');
      else {
        $.add$1(t1, '\n');
        $.add$1(t1, name$);
        $.add$1(t1, ': ');
      }
    if (i >= values.length)
      throw $.ioore(i);
    $.add$1(t1, values[i]);
  }
  $.add$1(t1, '\n');
},
 call$2$bailout: function(state0, name$, values) {
  var t1 = this.sb_0;
  $.add$1(t1, name$);
  $.add$1(t1, ': ');
  for (var t2 = this.this_1._foldHeader$1(name$) === true, i = 0; $.ltB(i, $.get$length(values)); ++i) {
    if (i > 0)
      if (t2)
        $.add$1(t1, ', ');
      else {
        $.add$1(t1, '\n');
        $.add$1(t1, name$);
        $.add$1(t1, ': ');
      }
    $.add$1(t1, $.index(values, i));
  }
  $.add$1(t1, '\n');
}
};

$$._HttpHeaders__write_anon = {"":
 ["COMMASP_4", "COLONSP_3", "CRLF_2", "connection_1", "this_0"],
 "super": "Closure",
 call$2: function(name$, values) {
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior))
    return this.call$2$bailout(1, name$, values);
  var fold = this.this_0._foldHeader$1(name$);
  var data = $.charCodes(name$);
  var t1 = this.connection_1;
  t1._write$1(data);
  var t2 = this.COLONSP_3;
  t1._write$1(t2);
  for (var t3 = fold === true, t4 = this.COMMASP_4, t5 = this.CRLF_2, i = 0; i < values.length; ++i) {
    if (i > 0)
      if (t3)
        t1._write$1(t4);
      else {
        t1._write$1(t5);
        t1._write$1($.charCodes(name$));
        t1._write$1(t2);
      }
    if (i >= values.length)
      throw $.ioore(i);
    data = $.charCodes(values[i]);
    t1._write$1(data);
  }
  t1._write$1(t5);
},
 call$2$bailout: function(state0, name$, values) {
  var fold = this.this_0._foldHeader$1(name$);
  var data = $.charCodes(name$);
  var t1 = this.connection_1;
  t1._write$1(data);
  var t2 = this.COLONSP_3;
  t1._write$1(t2);
  for (var t3 = fold === true, t4 = this.COMMASP_4, t5 = this.CRLF_2, i = 0; $.ltB(i, $.get$length(values)); ++i) {
    if (i > 0)
      if (t3)
        t1._write$1(t4);
      else {
        t1._write$1(t5);
        t1._write$1($.charCodes(name$));
        t1._write$1(t2);
      }
    data = $.charCodes($.index(values, i));
    t1._write$1(data);
  }
  t1._write$1(t5);
}
};

$$._HttpResponse__writeHeader_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(cookie) {
  this.this_0.get$_headers().add$2('set-cookie', cookie);
}
};

$$._HttpConnection__responseDone_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  this.this_0.get$_socket().close$0();
}
};

$$._HttpRequestResponseBase_persistentConnection_anon = {"":
 [],
 "super": "Closure",
 call$1: function(value) {
  return $.eq($.toLowerCase(value), 'close');
}
};

$$._HttpRequestResponseBase_persistentConnection_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(value) {
  return $.eq($.toLowerCase(value), 'keep-alive');
}
};

$$.HashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.BoundClosure = {'':
 ['self', 'target'],
 'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$$.BoundClosure0 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure1 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.isNaN = function(receiver) {
  return isNaN(receiver);
};

$.HttpParserException$ = function(message) {
  return new $.HttpParserException(message);
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.codepointsToString = function(codepoints) {
  if ($._is16BitCodeUnit() === true)
    return $.StringImplementation_String$fromCharCodes($._codepointsToUtf16CodeUnits(codepoints, 0, null, 65533));
  else
    return $.StringImplementation_String$fromCharCodes(codepoints);
};

$._HttpUtils_formatDate = function(date) {
  var d = date.toUtc$0();
  var sb = $.StringBuffer_StringBuffer('');
  var t1 = $.sub(d.get$weekday(), 1);
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= 7)
    throw $.ioore(t1);
  $.add$1(sb, $.CTC4[t1]);
  $.add$1(sb, ', ');
  $.add$1(sb, $.toString(d.get$day()));
  $.add$1(sb, ' ');
  var t2 = $.sub(d.get$month(), 1);
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= 12)
    throw $.ioore(t2);
  $.add$1(sb, $.CTC5[t2]);
  $.add$1(sb, ' ');
  $.add$1(sb, $.toString(d.get$year()));
  if ($.ltB(d.get$hour(), 9))
    $.add$1(sb, ' 0');
  else
    $.add$1(sb, ' ');
  $.add$1(sb, $.toString(d.get$hour()));
  if ($.ltB(d.get$minute(), 9))
    $.add$1(sb, ':0');
  else
    $.add$1(sb, ':');
  $.add$1(sb, $.toString(d.get$minute()));
  if ($.ltB(d.get$second(), 9))
    $.add$1(sb, ':0');
  else
    $.add$1(sb, ':');
  $.add$1(sb, $.toString(d.get$second()));
  $.add$1(sb, ' GMT');
  return $.toString(sb);
};

$.ListImplementation__from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.hasNext$0() === true;)
    result.push(t1.next$0());
  return result;
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.createHtmlResponse = function() {
  return '<html>\n  <style>\n    body { background-color: teal; }\n    p { background-color: white; border-radius: 8px; border:solid 1px #555; text-align: center; padding: 0.5em;\n        font-family: "Lucida Grande", Tahoma; font-size: 18px; color: #555; }\n  </style>\n  <body>\n    <br/><br/>\n    <p>Current time: ' + $.S($.Date_Date$now()) + '</p>\n  </body>\n</html>\n';
};

$._HttpConnection$ = function(_server) {
  var t1 = $.Queue_Queue();
  t1 = new $._HttpConnection(_server, null, null, null, null, null, null, false, false, $._HttpParser$(), t1, null, null);
  t1._HttpConnectionBase$0();
  t1._HttpConnection$1(_server);
  return t1;
};

$.StreamException$ = function(message) {
  return new $.StreamException(message);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior)
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, i = srcStart, j = dstStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      var t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.DateImplementation$now = function() {
  var t1 = new $.DateImplementation($.Primitives_dateNow(), false);
  t1.DateImplementation$now$0();
  return t1;
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() : $.Primitives_lazyAsJsDate(receiver).getMilliseconds();
};

$.endsWith = function(receiver, other) {
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._BufferList$ = function() {
  var t1 = new $._BufferList(null, null, null);
  t1._BufferList$0();
  return t1;
};

$.HttpException$ = function(message) {
  return new $.HttpException(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.Set_Set = function() {
  return $.HashSetImplementation$();
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$._AsciiEncoder$ = function() {
  return new $._AsciiEncoder();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.constructorNameFallback = function(object) {
  if (object == null)
    return 'Null';
  var constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.removeRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.Primitives_getWeekday = function(receiver) {
  var weekday = receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDay() : $.Primitives_lazyAsJsDate(receiver).getDay();
  return $.mod(weekday + 6, 7) + 1;
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$.StringBuffer_StringBuffer = function(content$) {
  return $.StringBufferImpl$(content$);
};

$.Utf8Decoder$ = function(utf8EncodedBytes, offset, length$, replacementCodepoint) {
  return new $.Utf8Decoder($._ListRange$(utf8EncodedBytes, offset, length$).iterator$0(), replacementCodepoint);
};

$.StringImplementation_concatAll = function(strings) {
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), '');
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.getRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  var t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._HttpServer$ = function() {
  return new $._HttpServer(null, false, $.Set_Set(), $.ListImplementation_List(null), null, null);
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$._RequestHandlerRegistration$ = function(_matcher, _handler) {
  return new $._RequestHandlerRegistration(_matcher, _handler);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._ServerSocket__ServerSocket = function(bindAddress, port, backlog) {
  throw $.$$throw($.UnsupportedOperationException$('new ServerSocket(' + bindAddress + ', ' + $.S(port) + ', ' + $.S(backlog) + ')'));
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.requestReceivedHandler = function(request, response) {
  $.print('Request: ' + $.S(request.get$method()) + ' ' + $.S(request.get$uri()));
  var htmlResponse = $.createHtmlResponse();
  response.get$headers().set$2('Content-Type', 'text/html; charset=UTF-8');
  response.get$outputStream().writeString$1(htmlResponse);
  response.get$outputStream().close$0();
};

$.decodeUtf8 = function(bytes, offset, length$, replacementCodepoint) {
  return $.codepointsToString($.Utf8Decoder$(bytes, offset, length$, replacementCodepoint).decodeRest$0());
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBuffer_StringBuffer('');
      var length$ = receiver.length;
      $.add$1(result, to);
      for (var i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC6, true), "\\$&"), false, false), true), to);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.ExceptionImplementation$ = function(message) {
  return new $.ExceptionImplementation(message);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.StringImplementation_String$fromCharCodes = function(charCodes) {
  return $.StringImplementation__fromCharCodes(charCodes);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCSeconds() : $.Primitives_lazyAsJsDate(receiver).getSeconds();
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var j = 0, index = 1; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.contains$1 = function(receiver, other) {
  return $.contains$2(receiver, other, 0);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCHours() : $.Primitives_lazyAsJsDate(receiver).getHours();
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.parseInt = function(string) {
  return $.int_parse(string);
};

$.Primitives_parseInt = function(string) {
  $.checkString(string);
  var match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  var base = !($.index(match, 1) == null) ? 16 : 10;
  var result = parseInt(string, base);
  if ($.isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$._Latin1Encoder$ = function() {
  return new $._Latin1Encoder();
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || !!c.is$List);
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0)
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.ServerSocket_ServerSocket = function(bindAddress, port, backlog) {
  return $._ServerSocket__ServerSocket(bindAddress, port, backlog);
};

$.contains$2 = function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.isEmpty$0();
};

$._ListRangeIteratorImpl$ = function(_source, _offset, _end) {
  return new $._ListRangeIteratorImpl(_source, _offset, _end);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior)
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDate() : $.Primitives_lazyAsJsDate(receiver).getDate();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$._HttpRequest$ = function(connection) {
  var t1 = new $._HttpRequest(null, null, null, null, null, null, null, false, null, 0, 1, 2, 3, null, null, connection, $._HttpHeaders$(), null, '1.1', -1, 0);
  t1._HttpRequestResponseBase$1(connection);
  return t1;
};

$.HashSetImplementation$ = function() {
  var t1 = new $.HashSetImplementation(null);
  t1.HashSetImplementation$0();
  return t1;
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._HttpParser$ = function() {
  var t1 = new $._HttpParser(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1._HttpParser$0();
  return t1;
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC21)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.contains = function(userAgent, name$) {
  return userAgent.indexOf(name$) !== -1;
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMinutes() : $.Primitives_lazyAsJsDate(receiver).getMinutes();
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.DateImplementation$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateImplementation(millisecondsSinceEpoch, isUtc);
  t1.DateImplementation$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  for (var t1 = $.iterator(charCodes); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  return !($.indexOf$2(receiver, other, startIndex) === -1);
};

$.ObjectNotClosureException$ = function() {
  return new $.ObjectNotClosureException();
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$._HttpUtils_splitQueryString = function(queryString) {
  var result = $.HashMapImplementation$();
  for (var currentPosition = 0; $.ltB(currentPosition, $.get$length(queryString));) {
    var position = $.indexOf$2(queryString, '=', currentPosition);
    if ($.eqB(position, -1))
      break;
    var name$ = $.substring$2(queryString, currentPosition, position);
    currentPosition = $.add(position, 1);
    position = $.indexOf$2(queryString, '&', currentPosition);
    if ($.eqB(position, -1)) {
      var value = $.substring$1(queryString, currentPosition);
      currentPosition = $.get$length(queryString);
    } else {
      value = $.substring$2(queryString, currentPosition, position);
      currentPosition = $.add(position, 1);
    }
    result.operator$indexSet$2($._HttpUtils_decodeUrlEncodedString(name$), $._HttpUtils_decodeUrlEncodedString(value));
  }
  return result;
};

$.charCodes = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.charCodes$0();
  var len = receiver.length;
  var result = $.ListImplementation_List(len);
  for (var i = 0; i < len; ++i)
    result[i] = $.charCodeAt(receiver, i);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.StringImplementation__fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes)) {
    if (!(typeof charCodes === 'object' && charCodes !== null && (charCodes.constructor === Array || !!charCodes.is$List)))
      throw $.$$throw($.ArgumentError$(charCodes));
    var charCodes0 = $.ListImplementation_List$from(charCodes);
    charCodes = charCodes0;
  }
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.mod = function(a, b) {
  if ($.checkNumbers(a, b)) {
    var result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.EncoderException$ = function(message) {
  return new $.EncoderException(message);
};

$.hashCode = function(receiver) {
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.hashCode$0();
  var length$ = receiver.length;
  for (var hash = 0, i = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.startsWith = function(receiver, other) {
  $.checkString(other);
  var length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || !!o.is$Collection))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || !!o.is$List) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && !!o.is$Map)
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(result, t1, visiting));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.throwRuntimeError = function(message) {
  throw $.$$throw($.RuntimeError$(message));
};

$.setRange$4 = function(receiver, start, length$, from, startFrom) {
  if (!$.isJsArray(receiver))
    return receiver.setRange$4(start, length$, from, startFrom);
  $.checkMutable(receiver, 'indexed set');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  $.checkNull(from);
  $.checkNull(startFrom);
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof startFrom === 'number' && Math.floor(startFrom) === startFrom))
    throw $.$$throw($.ArgumentError$(startFrom));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if ($.gtB(t1, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  $.Arrays_copy(from, startFrom, receiver, start, length$);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_lib2_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'AppleWebKit'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$._StringEncoders_encoder = function(encoding) {
  if ($.eqB(encoding, $.CTC13))
    return $._UTF8Encoder$();
  else if ($.eqB(encoding, $.CTC14))
    return $._Latin1Encoder$();
  else if ($.eqB(encoding, $.CTC15))
    return $._AsciiEncoder$();
  else
    throw $.$$throw($.StreamException$('Unsupported encoding ' + $.S(encoding.name)));
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$._HttpOutputStream$ = function(_requestOrResponse) {
  return new $._HttpOutputStream(_requestOrResponse, null);
};

$._HttpHeaders$ = function() {
  return new $._HttpHeaders(true, $.HashMapImplementation$(), null, null, null);
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.toLowerCase$0();
  return receiver.toLowerCase();
};

$._codepointsToUtf16CodeUnits = function(codepoints, offset, length$, replacementCodepoint) {
  var listRange = $._ListRange$(codepoints, offset, length$);
  for (var t1 = $.iterator(listRange), encodedLength = 0; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!($.geB(t2, 0) && $.ltB(t2, 55296)))
      var t3 = $.gtB(t2, 57343) && $.leB(t2, 65535);
    else
      t3 = true;
    if (t3)
      ++encodedLength;
    else
      encodedLength = $.gtB(t2, 65535) && $.leB(t2, 1114111) ? encodedLength + 2 : encodedLength + 1;
  }
  var codeUnitsBuffer = $.ListImplementation_List(encodedLength);
  for (var t1 = $.iterator(listRange), j = 0; t1.hasNext$0() === true;) {
    t2 = t1.next$0();
    if (!($.geB(t2, 0) && $.ltB(t2, 55296)))
      t3 = $.gtB(t2, 57343) && $.leB(t2, 65535);
    else
      t3 = true;
    if (t3) {
      var j0 = j + 1;
      if (j < 0 || j >= encodedLength)
        throw $.ioore(j);
      codeUnitsBuffer[j] = t2;
      j = j0;
    } else if ($.gtB(t2, 65535) && $.leB(t2, 1114111)) {
      var base = $.sub(t2, 65536);
      j0 = j + 1;
      t2 = $.shr($.and(base, 1047552), 10);
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = 55296 + t2;
      if (j < 0 || j >= encodedLength)
        throw $.ioore(j);
      codeUnitsBuffer[j] = t2;
      j = j0 + 1;
      t2 = $.and(base, 1023);
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = 56320 + t2;
      if (j0 < 0 || j0 >= encodedLength)
        throw $.ioore(j0);
      codeUnitsBuffer[j0] = t2;
    } else {
      j0 = j + 1;
      if (j < 0 || j >= encodedLength)
        throw $.ioore(j);
      codeUnitsBuffer[j] = replacementCodepoint;
      j = j0;
    }
  }
  return codeUnitsBuffer;
};

$._is16BitCodeUnit = function() {
  if ($._test16BitCodeUnit == null)
    $._test16BitCodeUnit = $.eq($.StringImplementation_String$fromCharCodes([119070]), $.StringImplementation_String$fromCharCodes([53534]));
  return $._test16BitCodeUnit;
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._ListRange$ = function(source, offset, length$) {
  var t1 = length$ == null ? $.sub($.get$length(source), offset) : length$;
  t1 = new $._ListRange(source, offset, t1);
  t1._ListRange$3(source, offset, length$);
  return t1;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$._HttpUtils_decodeUrlEncodedString = function(urlEncoded) {
  if (typeof urlEncoded !== 'string' && (typeof urlEncoded !== 'object' || urlEncoded === null || urlEncoded.constructor !== Array && !urlEncoded.is$JavaScriptIndexingBehavior))
    return $._HttpUtils_decodeUrlEncodedString$bailout(1, urlEncoded);
  var index = 0;
  var encoded = false;
  while (true) {
    var t1 = !encoded;
    if (!(t1 && index < urlEncoded.length))
      break;
    if (index >= urlEncoded.length)
      throw $.ioore(index);
    if (!$.eqB(urlEncoded[index], '+')) {
      if (index >= urlEncoded.length)
        throw $.ioore(index);
      encoded = $.eqB(urlEncoded[index], '%');
    } else
      encoded = true;
    ++index;
  }
  if (t1)
    return urlEncoded;
  --index;
  var bytes = $.ListImplementation_List(null);
  for (var i = 0; i < index; ++i)
    bytes.push($.charCodeAt(urlEncoded, i));
  for (i = index; t1 = urlEncoded.length, i < t1; ++i) {
    if (i < 0)
      throw $.ioore(i);
    if ($.eqB(urlEncoded[i], '+'))
      bytes.push(32);
    else {
      if (i < 0 || i >= urlEncoded.length)
        throw $.ioore(i);
      if ($.eqB(urlEncoded[i], '%')) {
        if (urlEncoded.length - i < 2)
          throw $.$$throw($.HttpException$('Invalid URL encoding'));
        for (var j = 0, byte$ = 0; j < 2; ++j) {
          var charCode = $.charCodeAt(urlEncoded, i + j + 1);
          if ($.leB(48, charCode) && $.leB(charCode, 57)) {
            t1 = byte$ * 16;
            if (typeof charCode !== 'number')
              throw $.iae(charCode);
            byte$ = t1 + charCode - 48;
          } else if ($.leB(65, charCode) && $.leB(charCode, 70)) {
            t1 = byte$ * 16;
            if (typeof charCode !== 'number')
              throw $.iae(charCode);
            byte$ = t1 + charCode - 55;
          } else if ($.leB(97, charCode) && $.leB(charCode, 102)) {
            t1 = byte$ * 16;
            if (typeof charCode !== 'number')
              throw $.iae(charCode);
            byte$ = t1 + charCode - 87;
          } else
            throw $.$$throw($.HttpException$('Invalid URL encoding'));
        }
        bytes.push(byte$);
        i += 2;
      } else
        bytes.push($.charCodeAt(urlEncoded, i));
    }
  }
  return $.decodeUtf8(bytes, 0, null, 65533);
};

$.UnsupportedOperationException$ = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$.HttpServer_HttpServer = function() {
  return $._HttpServer$();
};

$._UTF8Encoder$ = function() {
  return new $._UTF8Encoder();
};

$._UTF8Encoder__encodeString = function(string, buffer) {
  if (typeof buffer !== 'object' || buffer === null || (buffer.constructor !== Array || !!buffer.immutable$list) && !buffer.is$JavaScriptIndexingBehavior)
    return $._UTF8Encoder__encodeString$bailout(1, string, buffer, 0, 0, 0, 0, 0);
  var length$ = $.get$length(string);
  if (typeof length$ !== 'number')
    return $._UTF8Encoder__encodeString$bailout(2, string, buffer, length$, 0, 0, 0, 0);
  for (var pos = 0, i = 0; i < length$; ++i) {
    var charCode = $.charCodeAt(string, i);
    if (charCode !== (charCode | 0))
      return $._UTF8Encoder__encodeString$bailout(3, string, buffer, true, length$, charCode, pos, i);
    if (charCode <= 127) {
      if (pos < 0 || pos >= buffer.length)
        throw $.ioore(pos);
      buffer[pos] = charCode;
      var additionalBytes = 0;
    } else if (charCode <= 2047) {
      var t1 = ($.shr(charCode, 6) & 31 | 192) >>> 0;
      if (pos < 0 || pos >= buffer.length)
        throw $.ioore(pos);
      buffer[pos] = t1;
      additionalBytes = 1;
    } else if (charCode <= 65535) {
      t1 = ($.shr(charCode, 12) & 15 | 224) >>> 0;
      if (pos < 0 || pos >= buffer.length)
        throw $.ioore(pos);
      buffer[pos] = t1;
      additionalBytes = 2;
    } else {
      t1 = ($.shr(charCode, 18) & 7 | 240) >>> 0;
      if (pos < 0 || pos >= buffer.length)
        throw $.ioore(pos);
      buffer[pos] = t1;
      additionalBytes = 3;
    }
    ++pos;
    for (var i0 = additionalBytes; i0 > 0; --i0) {
      var pos0 = pos + 1;
      t1 = ($.shr(charCode, 6 * (i0 - 1)) & 63 | 128) >>> 0;
      if (pos < 0 || pos >= buffer.length)
        throw $.ioore(pos);
      buffer[pos] = t1;
      pos = pos0;
    }
  }
  return pos;
};

$.Date_Date$now = function() {
  return $.DateImplementation$now();
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.StackOverflowException$ = function() {
  return new $.StackOverflowException();
};

$.StringBufferImpl$ = function(content$) {
  var t1 = new $.StringBufferImpl(null, null);
  t1.StringBufferImpl$1(content$);
  return t1;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.some = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.some$1(f);
  else
    return $.Collections_some(receiver, f);
};

$.Collections_some = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.NoMoreElementsException$ = function() {
  return new $.NoMoreElementsException();
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCFullYear() : $.Primitives_lazyAsJsDate(receiver).getFullYear();
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.ListImplementation_List$from = function(other) {
  return $.ListImplementation__from(other);
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $.DateImplementation$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.main = function() {
  var server = $.HttpServer_HttpServer();
  server.addRequestHandler$2(new $.main_anon(), $.requestReceivedHandler);
  server.listen$2('127.0.0.1', 8080);
  $.print('Serving the current time on http://127.0.0.1:8080.');
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $.ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowException$();
    return $.ArgumentError$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowException$();
  return ex;
};

$._HttpResponse$ = function(httpConnection) {
  var t1 = new $._HttpResponse(200, null, null, null, 0, 1, 2, 3, null, null, httpConnection, $._HttpHeaders$(), null, '1.1', -1, 0);
  t1._HttpRequestResponseBase$1(httpConnection);
  return t1;
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.HashSetIterator$ = function(set_) {
  var t1 = new $.HashSetIterator(set_._backingMap._keys, -1);
  t1.HashSetIterator$1(set_);
  return t1;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.setRange$3 = function(receiver, start, length$, from) {
  if ($.isJsArray(receiver))
    return $.setRange$4(receiver, start, length$, from, 0);
  return receiver.setRange$3(start, length$, from);
};

$._HttpUtils_decodeUrlEncodedString$bailout = function(state0, urlEncoded) {
  var index = 0;
  var encoded = false;
  while (true) {
    var t1 = !encoded;
    if (!(t1 && $.ltB(index, $.get$length(urlEncoded))))
      break;
    encoded = $.eqB($.index(urlEncoded, index), '+') || $.eqB($.index(urlEncoded, index), '%');
    ++index;
  }
  if (t1)
    return urlEncoded;
  --index;
  var bytes = $.ListImplementation_List(null);
  for (var i = 0; i < index; ++i)
    bytes.push($.charCodeAt(urlEncoded, i));
  for (i = index; $.ltB(i, $.get$length(urlEncoded)); ++i)
    if ($.eqB($.index(urlEncoded, i), '+'))
      bytes.push(32);
    else if ($.eqB($.index(urlEncoded, i), '%')) {
      if ($.ltB($.sub($.get$length(urlEncoded), i), 2))
        throw $.$$throw($.HttpException$('Invalid URL encoding'));
      for (var j = 0, byte$ = 0; j < 2; ++j) {
        var charCode = $.charCodeAt(urlEncoded, i + j + 1);
        if ($.leB(48, charCode) && $.leB(charCode, 57)) {
          t1 = byte$ * 16;
          if (typeof charCode !== 'number')
            throw $.iae(charCode);
          byte$ = t1 + charCode - 48;
        } else if ($.leB(65, charCode) && $.leB(charCode, 70)) {
          t1 = byte$ * 16;
          if (typeof charCode !== 'number')
            throw $.iae(charCode);
          byte$ = t1 + charCode - 55;
        } else if ($.leB(97, charCode) && $.leB(charCode, 102)) {
          t1 = byte$ * 16;
          if (typeof charCode !== 'number')
            throw $.iae(charCode);
          byte$ = t1 + charCode - 87;
        } else
          throw $.$$throw($.HttpException$('Invalid URL encoding'));
      }
      bytes.push(byte$);
      i += 2;
    } else
      bytes.push($.charCodeAt(urlEncoded, i));
  return $.decodeUtf8(bytes, 0, null, 65533);
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._UTF8Encoder__encodeString$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      var string = env0;
      var buffer = env1;
      break;
    case 2:
      string = env0;
      buffer = env1;
      length$ = env2;
      break;
    case 3:
      string = env0;
      buffer = env1;
      t1 = env2;
      length$ = env3;
      charCode = env4;
      pos = env5;
      i = env6;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var length$ = $.get$length(string);
    case 2:
      state0 = 0;
      var t1 = !(buffer == null);
      var pos = 0;
      var i = 0;
    case 3:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, length$))
                break L0;
              var charCode = $.charCodeAt(string, i);
            case 3:
              state0 = 0;
              if ($.leB(charCode, 127)) {
                if (t1)
                  $.indexSet(buffer, pos, charCode);
                var additionalBytes = 0;
              } else if ($.leB(charCode, 2047)) {
                if (t1)
                  $.indexSet(buffer, pos, $.or($.and($.shr(charCode, 6), 31), 192));
                additionalBytes = 1;
              } else if ($.leB(charCode, 65535)) {
                if (t1)
                  $.indexSet(buffer, pos, $.or($.and($.shr(charCode, 12), 15), 224));
                additionalBytes = 2;
              } else {
                if (t1)
                  $.indexSet(buffer, pos, $.or($.and($.shr(charCode, 18), 7), 240));
                additionalBytes = 3;
              }
              ++pos;
              if (t1)
                for (var i0 = additionalBytes; i0 > 0; --i0) {
                  var pos0 = pos + 1;
                  $.indexSet(buffer, pos, $.or($.and($.shr(charCode, 6 * (i0 - 1)), 63), 128));
                  pos = pos0;
                }
              else
                pos += additionalBytes;
              ++i;
          }
      return pos;
  }
};

$.StringImplementation__toJsStringArray$bailout = function(state0, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.requestReceivedHandler.call$2 = $.requestReceivedHandler;
$.requestReceivedHandler.$name = "requestReceivedHandler";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC22 = 32;
$.CTC12 = Isolate.makeConstantList([32]);
$.CTC23 = 'Jan';
$.CTC24 = 'Feb';
$.CTC25 = 'Mar';
$.CTC26 = 'Apr';
$.CTC27 = 'May';
$.CTC28 = 'Jun';
$.CTC29 = 'Jul';
$.CTC30 = 'Aug';
$.CTC31 = 'Sep';
$.CTC32 = 'Oct';
$.CTC33 = 'Nov';
$.CTC34 = 'Dec';
$.CTC5 = Isolate.makeConstantList(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
$.CTC35 = 'UTF-8';
$.CTC13 = new Isolate.$isolateProperties.Encoding('UTF-8');
$.CTC36 = 13;
$.CTC37 = 10;
$.CTC7 = Isolate.makeConstantList([13, 10]);
$.CTC38 = 72;
$.CTC39 = 84;
$.CTC40 = 80;
$.CTC41 = 47;
$.CTC42 = 49;
$.CTC43 = 46;
$.CTC18 = Isolate.makeConstantList([72, 84, 84, 80, 47, 49, 46]);
$.CTC1 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC44 = 'ISO-8859-1';
$.CTC14 = new Isolate.$isolateProperties.Encoding('ISO-8859-1');
$.CTC45 = 44;
$.CTC8 = Isolate.makeConstantList([44, 32]);
$.CTC17 = Isolate.makeConstantList([72, 84, 84, 80]);
$.CTC46 = 'ASCII';
$.CTC15 = new Isolate.$isolateProperties.Encoding('ASCII');
$.CTC47 = 48;
$.CTC16 = Isolate.makeConstantList([48, 13, 10, 13, 10]);
$.CTC48 = 40;
$.CTC49 = 41;
$.CTC50 = 60;
$.CTC51 = 62;
$.CTC52 = 64;
$.CTC53 = 59;
$.CTC54 = 58;
$.CTC55 = 92;
$.CTC56 = 34;
$.CTC57 = 91;
$.CTC58 = 93;
$.CTC59 = 63;
$.CTC60 = 61;
$.CTC61 = 123;
$.CTC62 = 125;
$.CTC63 = 9;
$.CTC19 = Isolate.makeConstantList([40, 41, 60, 62, 64, 44, 59, 58, 92, 34, 47, 91, 93, 63, 61, 123, 125, 32, 9, 13, 10]);
$.CTC20 = Isolate.makeConstantList([40, 41, 60, 62, 64, 44, 59, 58, 92, 34, 47, 91, 93, 63, 61, 123, 125, 32, 9]);
$.CTC21 = new Isolate.$isolateProperties.Object();
$.CTC11 = Isolate.makeConstantList([72, 84, 84, 80, 47, 49, 46, 48]);
$.CTC10 = Isolate.makeConstantList([72, 84, 84, 80, 47, 49, 46, 49]);
$.CTC64 = 'Mon';
$.CTC65 = 'Tue';
$.CTC66 = 'Wed';
$.CTC67 = 'Thu';
$.CTC68 = 'Fri';
$.CTC69 = 'Sat';
$.CTC70 = 'Sun';
$.CTC4 = Isolate.makeConstantList(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']);
$.CTC9 = Isolate.makeConstantList([58, 32]);
$.CTC71 = null;
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC3 = new Isolate.$isolateProperties.EmptyQueueException();
$.CTC2 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC72 = '[-[\\]{}()*+?.,\\\\^$|#\\s]';
$.CTC73 = false;
$.CTC6 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.HttpStatus_NOT_FOUND = 404;
$.HOST = '127.0.0.1';
$.HttpStatus_RESET_CONTENT = 205;
$.Encoding_UTF_8 = Isolate.$isolateProperties.CTC13;
$._UTF8_THREE_BYTE_MAX = 65535;
$.HttpStatus_EXPECTATION_FAILED = 417;
$._State_HEADER_VALUE = 13;
$._State_HEADER_VALUE_FOLDING_OR_ENDING = 14;
$.HttpStatus_SWITCHING_PROTOCOLS = 101;
$.HttpStatus_BAD_REQUEST = 400;
$.HttpStatus_CONTINUE = 100;
$.HttpStatus_PAYMENT_REQUIRED = 402;
$.HttpStatus_REQUEST_URI_TOO_LONG = 414;
$._Const_SEPARATORS = Isolate.$isolateProperties.CTC20;
$._State_CHUNK_SIZE = 19;
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$._State_REQUEST_LINE_HTTP_VERSION = 5;
$._State_METHOD_OR_RESPONSE_HTTP_VERSION = 1;
$._MessageType_UNDETERMINED = 0;
$._HttpVersion_UNDETERMINED = 0;
$._State_HEADER_ENDING = 16;
$._CharCode_SEMI_COLON = 59;
$._State_CHUNKED_BODY_DONE_LF = 23;
$._UTF8_LO_SIX_BIT_MASK = 63;
$._State_RESPONSE_LINE_REASON_PHRASE = 8;
$._State_CHUNK_SIZE_EXTENSION = 20;
$.HttpStatus_GONE = 410;
$.HttpStatus_SEE_OTHER = 303;
$.HttpHeaders_CONTENT_LENGTH = 'Content-Length';
$.HttpHeaders_TRANSFER_ENCODING = 'Transfer-Encoding';
$.UNICODE_UTF16_SURROGATE_UNIT_1_BASE = 56320;
$._Const_HTTP1DOT = Isolate.$isolateProperties.CTC18;
$.HttpStatus_INTERNAL_SERVER_ERROR = 500;
$.UNICODE_UTF16_OFFSET = 65536;
$._State_FIRST_BODY_STATE = 17;
$.HttpStatus_NON_AUTHORITATIVE_INFORMATION = 203;
$._UTF8_FIRST_BYTE_OF_SIX_BASE = 252;
$.LOG_REQUESTS = true;
$._CharCode_LF = 10;
$._CharCode_ONE = 49;
$.UNICODE_UTF16_SURROGATE_UNIT_0_BASE = 55296;
$.HttpStatus_OK = 200;
$.UNICODE_UTF16_RESERVED_LO = 55296;
$._State_CHUNK_SIZE_ENDING = 21;
$.UNICODE_UTF16_LO_MASK = 1023;
$._State_HEADER_START = 10;
$.HttpStatus_PRECONDITION_FAILED = 412;
$._UTF8_ONE_BYTE_MAX = 127;
$._CharCode_SP = 32;
$._Const_HTTP11 = Isolate.$isolateProperties.CTC10;
$.HttpStatus_PARTIAL_CONTENT = 206;
$._HttpVersion_HTTP11 = 2;
$.Encoding_ISO_8859_1 = Isolate.$isolateProperties.CTC14;
$.DateImplementation__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$._Const_SEPARATORS_AND_CR_LF = Isolate.$isolateProperties.CTC19;
$._State_HEADER_VALUE_START = 12;
$.HttpStatus_UNAUTHORIZED = 401;
$.HttpStatus_REQUEST_TIMEOUT = 408;
$._State_FAILURE = 27;
$.HttpStatus_REQUESTED_RANGE_NOT_SATISFIABLE = 416;
$.HttpHeaders_CONNECTION = 'Connection';
$._test16BitCodeUnit = null;
$.HttpStatus_PROXY_AUTHENTICATION_REQUIRED = 407;
$._UTF8_FIRST_BYTE_OF_TWO_BASE = 192;
$._HttpConnectionBase__nextHashCode = 0;
$._State_UPGRADED = 26;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.HttpStatus_GATEWAY_TIMEOUT = 504;
$.PORT = 8080;
$._State_CHUNK_SIZE_STARTING_CR = 17;
$.HttpStatus_HTTP_VERSION_NOT_SUPPORTED = 505;
$._State_REQUEST_LINE_METHOD = 3;
$.HttpStatus_CONFLICT = 409;
$._CharCode_COLON = 58;
$._MessageType_REQUEST = 1;
$._State_HEADER_VALUE_FOLD_OR_END = 15;
$.HttpClient_DEFAULT_HTTP_PORT = 80;
$.HttpStatus_NOT_IMPLEMENTED = 501;
$._CharCode_ZERO = 48;
$.HttpStatus_ACCEPTED = 202;
$.UNICODE_UTF16_RESERVED_HI = 57343;
$._CharCode_SLASH = 47;
$._CharCode_CR = 13;
$._State_HEADER_FIELD = 11;
$._State_CHUNKED_BODY_DONE_CR = 22;
$.Encoding_ASCII = Isolate.$isolateProperties.CTC15;
$._UTF8_FIRST_BYTE_BOUND_EXCL = 254;
$._State_REQUEST_LINE_URI = 4;
$.HttpStatus_TEMPORARY_REDIRECT = 307;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC1;
$._State_CLOSED = 25;
$._State_CHUNK_SIZE_STARTING_LF = 18;
$.HttpStatus_NOT_ACCEPTABLE = 406;
$.UNICODE_PLANE_ONE_MAX = 65535;
$.HttpStatus_LENGTH_REQUIRED = 411;
$.HttpStatus_BAD_GATEWAY = 502;
$.HttpHeaders_CONTENT_TYPE = 'Content-Type';
$._State_BODY = 24;
$.UNICODE_REPLACEMENT_CHARACTER_CODEPOINT = 65533;
$.HttpStatus_UNSUPPORTED_MEDIA_TYPE = 415;
$._UTF8_FIRST_BYTE_OF_FIVE_BASE = 248;
$.HttpStatus_MULTIPLE_CHOICES = 300;
$._State_RESPONSE_LINE_STATUS_CODE = 7;
$._Const_END_CHUNKED = Isolate.$isolateProperties.CTC16;
$._State_RESPONSE_HTTP_VERSION = 2;
$._Const_HTTP = Isolate.$isolateProperties.CTC17;
$.HttpStatus_SERVICE_UNAVAILABLE = 503;
$._State_START = 0;
$._State_REQUEST_LINE_ENDING = 6;
$.HttpStatus_MOVED_PERMANENTLY = 301;
$._CharCode_COMMA = 44;
$._UTF8_FIRST_BYTE_OF_THREE_BASE = 224;
$._Const_HTTP10 = Isolate.$isolateProperties.CTC11;
$._HttpVersion_HTTP10 = 1;
$.UNICODE_VALID_RANGE_MAX = 1114111;
$._CharCode_HT = 9;
$._getTypeNameOf = null;
$.HttpStatus_CREATED = 201;
$.HttpStatus_METHOD_NOT_ALLOWED = 405;
$.HttpStatus_USE_PROXY = 305;
$.HttpStatus_FOUND = 302;
$.Primitives_hashCodeSeed = 0;
$.HttpStatus_REQUEST_ENTITY_TOO_LARGE = 413;
$.HttpStatus_FORBIDDEN = 403;
$._State_RESPONSE_LINE_ENDING = 9;
$._UTF8_FIRST_BYTE_OF_FOUR_BASE = 240;
$.UNICODE_UTF16_HI_MASK = 1047552;
$._UTF8_TWO_BYTE_MAX = 2047;
$.HttpStatus_NO_CONTENT = 204;
$._MessageType_RESPONSE = 0;
$.HttpStatus_NOT_MODIFIED = 304;
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, fields, methods) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], methods);
  }
  for (var method in methods) {
    $.dynamicFunction(method)[cls] = methods[method];
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 toString$0: function() { return $.toStringForNativeObject(this); },
 hashCode$0: function() { return $.hashCodeForNativeObject(this); }
});



//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=time_server.dart.js.map